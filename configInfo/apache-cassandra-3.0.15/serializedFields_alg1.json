{
    "org.apache.cassandra.tracing.TraceKeyspace": {
        "Events": "org.apache.cassandra.config.CFMetaData",
        "Sessions": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.db.rows.Rows": {
        "EMPTY_STATIC_ROW": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.io.compress.CompressionMetadata": {
        "compressedFileLength": "long",
        "chunkOffsets": "org.apache.cassandra.io.util.Memory",
        "parameters": "org.apache.cassandra.schema.CompressionParams",
        "dataLength": "long"
    },
    "org.apache.cassandra.db.Serializers": {
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.db.filter.ColumnSubselection$Slice": {
        "from": "org.apache.cassandra.db.rows.CellPath",
        "to": "org.apache.cassandra.db.rows.CellPath"
    },
    "org.apache.cassandra.config.Schema": {
        "keyspaceInstances": "java.util.Map",
        "instance": "org.apache.cassandra.config.Schema",
        "keyspaces": "java.util.Map",
        "cfIdMap": "org.apache.cassandra.utils.ConcurrentBiMap"
    },
    "org.apache.cassandra.db.filter.ClusteringIndexFilter$Kind": {
        "NAMES": "org.apache.cassandra.db.filter.ClusteringIndexFilter$Kind",
        "SLICE": "org.apache.cassandra.db.filter.ClusteringIndexFilter$Kind"
    },
    "org.apache.cassandra.db.RangeTombstoneList": {
        "markedAts": "long[]",
        "delTimes": "int[]",
        "starts": "org.apache.cassandra.db.Slice$Bound[]",
        "ends": "org.apache.cassandra.db.Slice$Bound[]"
    },
    "org.apache.cassandra.service.pager.PagingState$RowMark": {
        "mark": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.utils.Pair": {
        "left": "java.lang.Object",
        "right": "java.lang.Object"
    },
    "org.apache.cassandra.db.lifecycle.LifecycleTransaction$State": {
        "obsolete": "java.util.Set",
        "update": "java.util.Set"
    },
    "org.apache.cassandra.schema.Types": {
        "types": "java.util.Map"
    },
    "org.apache.cassandra.db.SinglePartitionReadCommand": {
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "clusteringIndexFilter": "org.apache.cassandra.db.filter.ClusteringIndexFilter"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstone": {
        "start": "org.apache.cassandra.db.LegacyLayout$LegacyBound",
        "deletionTime": "org.apache.cassandra.db.DeletionTime",
        "stop": "org.apache.cassandra.db.LegacyLayout$LegacyBound"
    },
    "org.apache.cassandra.schema.TableParams": {
        "crcCheckChance": "double",
        "memtableFlushPeriodInMs": "int",
        "gcGraceSeconds": "int",
        "speculativeRetry": "org.apache.cassandra.schema.SpeculativeRetryParam",
        "bloomFilterFpChance": "double",
        "minIndexInterval": "int",
        "dcLocalReadRepairChance": "double",
        "maxIndexInterval": "int",
        "comment": "java.lang.String",
        "readRepairChance": "double",
        "defaultTimeToLive": "int",
        "compression": "org.apache.cassandra.schema.CompressionParams",
        "DEFAULT": "org.apache.cassandra.schema.TableParams"
    },
    "org.apache.cassandra.io.sstable.format.Version": {
        "version": "java.lang.String"
    },
    "org.apache.cassandra.cache.CacheKey": {
        "ksAndCFName": "org.apache.cassandra.utils.Pair"
    },
    "org.apache.cassandra.service.StorageProxy$SingleRangeResponse": {
        "result": "org.apache.cassandra.db.partitions.PartitionIterator",
        "handler": "org.apache.cassandra.service.ReadCallback"
    },
    "org.apache.cassandra.db.DataRange$Paging": {
        "inclusive": "boolean",
        "lastReturned": "org.apache.cassandra.db.Clustering",
        "clusteringIndexFilter": "org.apache.cassandra.db.filter.ClusteringIndexFilter"
    },
    "org.apache.cassandra.db.rows.Row$Deletion": {
        "time": "org.apache.cassandra.db.DeletionTime",
        "LIVE": "org.apache.cassandra.db.rows.Row$Deletion"
    },
    "org.apache.cassandra.dht.Token$KeyBound": {
        "token": "org.apache.cassandra.dht.Token"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator$TombstoneTracker": {
        "openTombstones": "java.util.SortedSet",
        "openMarkerToReturn": "org.apache.cassandra.db.rows.RangeTombstoneMarker"
    },
    "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "estimatedRemainingTasks": "int"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableScanner": {
        "dfile": "org.apache.cassandra.io.util.RandomAccessReader",
        "iterator": "java.util.Iterator",
        "ifile": "org.apache.cassandra.io.util.RandomAccessReader",
        "sstable": "org.apache.cassandra.io.sstable.format.SSTableReader",
        "dataRange": "org.apache.cassandra.db.DataRange",
        "columns": "org.apache.cassandra.db.filter.ColumnFilter",
        "isForThrift": "boolean"
    },
    "org.apache.cassandra.service.ResponseResolver": {
        "responses": "org.apache.cassandra.utils.concurrent.Accumulator",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.utils.btree.TreeCursor": {
        "cur": "org.apache.cassandra.utils.btree.NodeCursor"
    },
    "org.apache.cassandra.service.pager.PagingState": {
        "remainingInPartition": "int",
        "partitionKey": "java.nio.ByteBuffer",
        "rowMark": "org.apache.cassandra.service.pager.PagingState$RowMark",
        "remaining": "int"
    },
    "org.apache.cassandra.db.transform.Stack": {
        "moreContents": "org.apache.cassandra.db.transform.Stack$MoreContentsHolder[]",
        "stack": "org.apache.cassandra.db.transform.Transformation[]"
    },
    "org.apache.cassandra.thrift.ThriftResultsMerger$SuperColumnsPartitionMerger": {
        "builder": "org.apache.cassandra.db.rows.Row$Builder",
        "superColumnMapColumn": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.db.RowIndexEntry$IndexedEntry": {
        "deletionTime": "org.apache.cassandra.db.DeletionTime",
        "headerLength": "long",
        "columnsIndex": "java.util.List"
    },
    "org.apache.cassandra.schema.KeyspaceMetadata": {
        "name": "java.lang.String",
        "types": "org.apache.cassandra.schema.Types",
        "params": "org.apache.cassandra.schema.KeyspaceParams"
    },
    "org.apache.cassandra.db.rows.Row$Merger$CellReducer": {
        "merged": "org.apache.cassandra.db.rows.Cell",
        "activeDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.io.util.CompressedSegmentedFile$Cleanup": {
        "metadata": "org.apache.cassandra.io.compress.CompressionMetadata"
    },
    "org.apache.cassandra.db.ClusteringPrefix$Deserializer": {
        "nextKind": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "nextValues": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.db.Slice$Bound": {
        "BOTTOM": "org.apache.cassandra.db.Slice$Bound",
        "TOP": "org.apache.cassandra.db.Slice$Bound",
        "values": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.db.rows.BTreeRow$CellIterator": {
        "columnData": "java.util.Iterator",
        "complexCells": "java.util.Iterator"
    },
    "org.apache.cassandra.db.rows.BTreeRow": {
        "primaryKeyLivenessInfo": "org.apache.cassandra.db.LivenessInfo",
        "clustering": "org.apache.cassandra.db.Clustering",
        "btree": "java.lang.Object[]",
        "deletion": "org.apache.cassandra.db.rows.Row$Deletion"
    },
    "org.apache.cassandra.io.sstable.format.SSTableWriter$TransactionalProxy": {
        "finalReader": "org.apache.cassandra.io.sstable.format.SSTableReader"
    },
    "org.apache.cassandra.db.EmptyIterators$EmptyUnfilteredPartitionIterator": {
        "isForThrift": "boolean"
    },
    "org.apache.cassandra.service.AbstractWriteResponseHandler": {
        "pendingEndpoints": "java.util.Collection"
    },
    "org.apache.cassandra.repair.RepairParallelism": {
        "name": "java.lang.String"
    },
    "org.apache.cassandra.service.StorageProxy$SinglePartitionReadLifecycle": {
        "result": "org.apache.cassandra.db.partitions.PartitionIterator",
        "repairHandler": "org.apache.cassandra.service.ReadCallback",
        "executor": "org.apache.cassandra.service.AbstractReadExecutor",
        "command": "org.apache.cassandra.db.SinglePartitionReadCommand"
    },
    "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer$Header": {
        "partitionDeletion": "org.apache.cassandra.db.DeletionTime",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "sHeader": "org.apache.cassandra.db.SerializationHeader",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.partitions.ImmutableBTreePartition": {
        "holder": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.utils.MerkleTree": {
        "hashdepth": "byte",
        "maxsize": "long",
        "size": "long",
        "fullRange": "org.apache.cassandra.dht.Range",
        "root": "org.apache.cassandra.utils.MerkleTree$Hashable"
    },
    "org.apache.cassandra.io.sstable.Descriptor": {
        "generation": "int"
    },
    "org.apache.cassandra.dht.LocalPartitioner$LocalToken": {
        "token": "java.lang.Comparable"
    },
    "org.apache.cassandra.dht.AbstractBounds$Type": {
        "BOUNDS": "org.apache.cassandra.dht.AbstractBounds$Type",
        "RANGE": "org.apache.cassandra.dht.AbstractBounds$Type"
    },
    "org.apache.cassandra.db.filter.ClusteringIndexSliceFilter": {
        "slices": "org.apache.cassandra.db.Slices",
        "reversed": "boolean"
    },
    "org.apache.cassandra.db.partitions.AbstractBTreePartition$SlicesIterator": {
        "currentSlice": "java.util.Iterator",
        "current": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "selection": "org.apache.cassandra.db.filter.ColumnFilter"
    },
    "org.apache.cassandra.service.DataResolver$ShortReadPartitionsProtection": {
        "singleResultCounter": "org.apache.cassandra.db.filter.DataLimits$Counter",
        "mergedResultCounter": "org.apache.cassandra.db.filter.DataLimits$Counter"
    },
    "org.apache.cassandra.db.PartitionColumns$Builder": {
        "staticColumns": "org.apache.cassandra.utils.btree.BTreeSet$Builder",
        "regularColumns": "org.apache.cassandra.utils.btree.BTreeSet$Builder"
    },
    "org.apache.cassandra.index.internal.CassandraIndex": {
        "indexedColumn": "org.apache.cassandra.config.ColumnDefinition",
        "metadata": "org.apache.cassandra.schema.IndexMetadata",
        "indexCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.transport.Message$Dispatcher$FlushItem": {
        "response": "java.lang.Object"
    },
    "org.apache.cassandra.db.rows.Cell": {
        "column": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer$CurrentDeserializer": {
        "builder": "org.apache.cassandra.db.rows.Row$Builder",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "clusteringDeserializer": "org.apache.cassandra.db.ClusteringPrefix$Deserializer"
    },
    "org.apache.cassandra.service.DataResolver$RepairMergeListener$MergeListener": {
        "repairs": "org.apache.cassandra.db.partitions.PartitionUpdate[]",
        "markerToRepair": "org.apache.cassandra.db.Slice$Bound[]",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime",
        "mergedDeletionTime": "org.apache.cassandra.db.DeletionTime",
        "currentRows": "org.apache.cassandra.db.rows.Row$Builder[]"
    },
    "org.apache.cassandra.hints.HintMessage": {
        "hint": "org.apache.cassandra.hints.Hint"
    },
    "org.apache.cassandra.db.CounterMutation": {
        "mutation": "org.apache.cassandra.db.Mutation"
    },
    "org.apache.cassandra.io.sstable.format.SSTableReader": {
        "selfRef": "org.apache.cassandra.utils.concurrent.Ref",
        "dfile": "org.apache.cassandra.io.util.SegmentedFile",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "bf": "org.apache.cassandra.utils.IFilter",
        "bloomFilterTracker": "org.apache.cassandra.io.sstable.BloomFilterTracker",
        "indexSummary": "org.apache.cassandra.io.sstable.IndexSummary",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "sstableMetadata": "org.apache.cassandra.io.sstable.metadata.StatsMetadata",
        "first": "org.apache.cassandra.db.DecoratedKey",
        "readMeter": "org.apache.cassandra.metrics.RestorableMeter"
    },
    "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator": {
        "owns": "long"
    },
    "org.apache.cassandra.utils.btree.TreeBuilder": {
        "rootBuilder": "org.apache.cassandra.utils.btree.NodeBuilder"
    },
    "org.apache.cassandra.streaming.StreamResultFuture": {
        "eventListeners": "java.util.Collection"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer": {
        "next": "org.apache.cassandra.db.rows.Unfiltered",
        "iterator": "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "saved": "org.apache.cassandra.db.rows.Unfiltered"
    },
    "org.apache.cassandra.utils.MerkleTree$Leaf": {
        "hash": "byte[]"
    },
    "org.apache.cassandra.io.sstable.SSTableTxnWriter": {
        "writer": "org.apache.cassandra.io.sstable.SSTableMultiWriter"
    },
    "org.apache.cassandra.io.sstable.ReducingKeyIterator": {
        "mi": "org.apache.cassandra.utils.IMergeIterator",
        "iters": "java.util.ArrayList"
    },
    "org.apache.cassandra.db.filter.DataLimits$CQLLimits": {
        "isDistinct": "boolean",
        "rowLimit": "int",
        "perPartitionLimit": "int"
    },
    "org.apache.cassandra.config.DatabaseDescriptor": {
        "conf": "org.apache.cassandra.config.Config",
        "listenAddress": "java.net.InetAddress",
        "partitioner": "org.apache.cassandra.dht.IPartitioner",
        "broadcastAddress": "java.net.InetAddress"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer": {
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.cache.RowCacheKey": {
        "ksAndCFName": "org.apache.cassandra.utils.Pair",
        "key": "byte[]"
    },
    "org.apache.cassandra.db.filter.ColumnFilter$Builder": {
        "selection": "org.apache.cassandra.db.PartitionColumns$Builder",
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.service.StorageProxy$RangeForQuery": {
        "liveEndpoints": "java.util.List",
        "range": "org.apache.cassandra.dht.AbstractBounds"
    },
    "org.apache.cassandra.db.columniterator.AbstractSSTableIterator": {
        "sstable": "org.apache.cassandra.io.sstable.format.SSTableReader",
        "reader": "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$Reader",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "columns": "org.apache.cassandra.db.filter.ColumnFilter",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.transform.StoppingTransformation": {
        "partitions": "org.apache.cassandra.db.transform.BaseIterator",
        "rows": "org.apache.cassandra.db.transform.BaseIterator"
    },
    "org.apache.cassandra.db.compaction.LeveledManifest$CompactionCandidate": {
        "sstables": "java.util.Collection"
    },
    "org.apache.cassandra.db.commitlog.IntervalSet": {
        "ranges": "java.util.NavigableMap"
    },
    "org.apache.cassandra.config.Config": {
        "data_file_directories": "java.lang.String[]"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyCell": {
        "name": "org.apache.cassandra.db.LegacyLayout$LegacyCellName",
        "localDeletionTime": "int",
        "value": "java.nio.ByteBuffer",
        "ttl": "int",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.rows.BufferCell": {
        "path": "org.apache.cassandra.db.rows.CellPath",
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "localDeletionTime": "int",
        "value": "java.nio.ByteBuffer",
        "ttl": "int",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.columniterator.SSTableReversedIterator$SkipLastIterator": {
        "iterator": "java.util.Iterator"
    },
    "org.apache.cassandra.db.AbstractClusteringPrefix": {
        "kind": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "values": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.db.rows.ComplexColumnData": {
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "cells": "java.lang.Object[]",
        "complexDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.utils.FilterFactory": {
        "AlwaysPresent": "org.apache.cassandra.utils.IFilter"
    },
    "org.apache.cassandra.io.sstable.Component": {
        "name": "java.lang.String"
    },
    "org.apache.cassandra.db.compaction.LeveledCompactionStrategy$LeveledScanner": {
        "sstableIterator": "java.util.Iterator",
        "currentScanner": "org.apache.cassandra.io.sstable.ISSTableScanner",
        "sstables": "java.util.List"
    },
    "org.apache.cassandra.config.ViewDefinition": {
        "includeAllColumns": "boolean",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "whereClause": "java.lang.String",
        "viewName": "java.lang.String",
        "baseTableId": "java.util.UUID"
    },
    "org.apache.cassandra.io.compress.CompressedSequentialWriter": {
        "uncompressedSize": "long",
        "metadataWriter": "org.apache.cassandra.io.compress.CompressionMetadata$Writer",
        "chunkOffset": "long"
    },
    "org.apache.cassandra.transport.messages.ResultMessage$Prepared": {
        "resultMetadata": "org.apache.cassandra.cql3.ResultSet$ResultMetadata",
        "metadata": "org.apache.cassandra.cql3.ResultSet$PreparedMetadata"
    },
    "org.apache.cassandra.db.partitions.PurgeFunction": {
        "purger": "org.apache.cassandra.db.DeletionPurger"
    },
    "org.apache.cassandra.batchlog.Batch": {
        "encodedMutations": "java.util.Collection",
        "id": "java.util.UUID",
        "creationTime": "long",
        "decodedMutations": "java.util.Collection"
    },
    "org.apache.cassandra.db.context.CounterContext$ContextState": {
        "context": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.lifecycle.LogFile": {
        "replicas": "org.apache.cassandra.db.lifecycle.LogReplicaSet"
    },
    "org.apache.cassandra.streaming.ConnectionHandler$IncomingMessageHandler": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.tracing.TraceState": {
        "traceType": "org.apache.cassandra.tracing.Tracing$TraceType",
        "sessionIdBytes": "java.nio.ByteBuffer",
        "ttl": "int"
    },
    "org.apache.cassandra.dht.tokenallocator.ReplicationAwareTokenAllocator$UnitInfo": {
        "prevUsed": "org.apache.cassandra.dht.tokenallocator.ReplicationAwareTokenAllocator$UnitInfo",
        "group": "org.apache.cassandra.dht.tokenallocator.ReplicationAwareTokenAllocator$GroupInfo"
    },
    "org.apache.cassandra.db.SinglePartitionReadCommand$Group": {
        "commands": "java.util.List",
        "limits": "org.apache.cassandra.db.filter.DataLimits"
    },
    "org.apache.cassandra.db.compaction.CompactionStrategyManager": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "repaired": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy",
        "unrepaired": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy"
    },
    "org.apache.cassandra.db.lifecycle.View": {
        "compacting": "java.util.Set",
        "sstablesMap": "java.util.Map",
        "compactingMap": "java.util.Map",
        "liveMemtables": "java.util.List",
        "sstables": "java.util.Set",
        "intervalTree": "org.apache.cassandra.db.lifecycle.SSTableIntervalTree"
    },
    "org.apache.cassandra.io.util.CompressedSegmentedFile": {
        "metadata": "org.apache.cassandra.io.compress.CompressionMetadata"
    },
    "org.apache.cassandra.db.partitions.AbstractBTreePartition": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "EMPTY": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder"
    },
    "org.apache.cassandra.hints.HintsDescriptor": {
        "hostId": "java.util.UUID",
        "version": "int",
        "timestamp": "long"
    },
    "org.apache.cassandra.index.internal.composites.CompositesSearcher": {
        "index": "org.apache.cassandra.index.internal.CassandraIndex"
    },
    "org.apache.cassandra.db.EmptyIterators$EmptyUnfilteredRowIterator": {
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyCellName": {
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "collectionElement": "java.nio.ByteBuffer",
        "clustering": "org.apache.cassandra.db.Clustering"
    },
    "org.apache.cassandra.db.Memtable$ColumnsCollector": {
        "predefined": "java.util.HashMap",
        "extra": "java.util.concurrent.ConcurrentSkipListSet"
    },
    "org.apache.cassandra.db.rows.AbstractUnfilteredRowIterator": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "stats": "org.apache.cassandra.db.rows.EncodingStats",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "columns": "org.apache.cassandra.db.PartitionColumns",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.ReadResponse": {
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.db.view.View": {
        "definition": "org.apache.cassandra.config.ViewDefinition",
        "query": "org.apache.cassandra.db.ReadQuery"
    },
    "org.apache.cassandra.utils.BloomCalculations$BloomSpecification": {
        "K": "int"
    },
    "org.apache.cassandra.db.Mutation": {
        "keyspaceName": "java.lang.String",
        "key": "org.apache.cassandra.db.DecoratedKey",
        "modifications": "java.util.Map"
    },
    "org.apache.cassandra.db.rows.AbstractCell": {
        "column": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.config.CFMetaData$Builder": {
        "keyspace": "java.lang.String",
        "tableId": "java.util.UUID",
        "table": "java.lang.String"
    },
    "org.apache.cassandra.utils.BloomFilter": {
        "bitset": "org.apache.cassandra.utils.obs.IBitSet",
        "hashCount": "int"
    },
    "org.apache.cassandra.db.rows.RangeTombstoneMarker$Merger": {
        "markers": "org.apache.cassandra.db.rows.RangeTombstoneMarker[]",
        "openMarkers": "org.apache.cassandra.db.DeletionTime[]",
        "bound": "org.apache.cassandra.db.RangeTombstone$Bound"
    },
    "org.apache.cassandra.db.PartitionRangeReadCommand": {
        "dataRange": "org.apache.cassandra.db.DataRange"
    },
    "org.apache.cassandra.db.marshal.TimestampType": {
        "instance": "org.apache.cassandra.db.marshal.TimestampType"
    },
    "org.apache.cassandra.db.partitions.SingletonUnfilteredPartitionIterator": {
        "isForThrift": "boolean",
        "iter": "org.apache.cassandra.db.rows.UnfilteredRowIterator"
    },
    "org.apache.cassandra.db.RangeTombstone$Bound": {
        "BOTTOM": "org.apache.cassandra.db.RangeTombstone$Bound",
        "TOP": "org.apache.cassandra.db.RangeTombstone$Bound",
        "values": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.auth.CassandraRoleManager": {
        "LEGACY_ROW_TO_ROLE": "com.google.common.base.Function",
        "ROW_TO_ROLE": "com.google.common.base.Function"
    },
    "org.apache.cassandra.metrics.RestorableMeter": {
        "m120Rate": "org.apache.cassandra.metrics.RestorableMeter$RestorableEWMA",
        "NANOS_PER_SECOND": "double"
    },
    "org.apache.cassandra.db.partitions.AtomicBTreePartition$RowUpdater": {
        "ref": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "updating": "org.apache.cassandra.db.partitions.AtomicBTreePartition",
        "indexer": "org.apache.cassandra.index.transactions.UpdateTransaction",
        "regularBuilder": "org.apache.cassandra.db.rows.Row$Builder"
    },
    "org.apache.cassandra.utils.btree.BTreeSet$BTreeDescRange": {
        "tree": "java.lang.Object[]",
        "upperBound": "int"
    },
    "org.apache.cassandra.db.partitions.PartitionUpdate$CounterMark": {
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "path": "org.apache.cassandra.db.rows.CellPath",
        "row": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.thrift.ThriftResultsMerger$PartitionMerger": {
        "builder": "org.apache.cassandra.db.rows.Row$Builder",
        "staticCells": "java.util.Iterator",
        "nextFromWrapped": "org.apache.cassandra.db.rows.Unfiltered",
        "nextToMerge": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.utils.btree.NodeBuilder": {
        "parent": "org.apache.cassandra.utils.btree.NodeBuilder",
        "updateFunction": "org.apache.cassandra.utils.btree.UpdateFunction",
        "copyFrom": "java.lang.Object[]",
        "child": "org.apache.cassandra.utils.btree.NodeBuilder"
    },
    "org.apache.cassandra.index.internal.keys.KeysSearcher": {
        "index": "org.apache.cassandra.index.internal.CassandraIndex",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.db.filter.DataLimits": {
        "NONE": "org.apache.cassandra.db.filter.DataLimits",
        "DISTINCT_NONE": "org.apache.cassandra.db.filter.DataLimits"
    },
    "org.apache.cassandra.service.AsyncRepairCallback": {
        "repairResolver": "org.apache.cassandra.service.DataResolver"
    },
    "org.apache.cassandra.db.rows.LazilyInitializedUnfilteredRowIterator": {
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "iterator": "org.apache.cassandra.db.rows.UnfilteredRowIterator"
    },
    "org.apache.cassandra.utils.MergeIterator": {
        "iterators": "java.util.List",
        "reducer": "org.apache.cassandra.utils.MergeIterator$Reducer"
    },
    "org.apache.cassandra.utils.MerkleTrees": {
        "merkleTrees": "java.util.Map"
    },
    "org.apache.cassandra.hints.HintsWriter$Session": {
        "buffer": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.streaming.ConnectionHandler$OutgoingMessageHandler": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.db.filter.DataLimits$CQLLimits$CQLCounter": {
        "rowCounted": "int"
    },
    "org.apache.cassandra.db.rows.BTreeRow$Builder": {
        "primaryKeyLivenessInfo": "org.apache.cassandra.db.LivenessInfo",
        "clustering": "org.apache.cassandra.db.Clustering",
        "cells": "org.apache.cassandra.utils.btree.BTree$Builder",
        "deletion": "org.apache.cassandra.db.rows.Row$Deletion"
    },
    "org.apache.cassandra.schema.LegacySchemaMigrator$Function": {
        "timestamp": "long"
    },
    "org.apache.cassandra.streaming.StreamSummary": {
        "files": "int",
        "totalSize": "long"
    },
    "org.apache.cassandra.db.filter.ClusteringIndexNamesFilter": {
        "clusterings": "java.util.NavigableSet",
        "reversed": "boolean"
    },
    "org.apache.cassandra.db.SystemKeyspace": {
        "LegacyBatchlog": "org.apache.cassandra.config.CFMetaData",
        "Batches": "org.apache.cassandra.config.CFMetaData",
        "LegacyHints": "org.apache.cassandra.config.CFMetaData",
        "SizeEstimates": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.service.StorageProxy$RangeCommandIterator": {
        "counter": "org.apache.cassandra.db.filter.DataLimits$Counter",
        "sentQueryIterator": "org.apache.cassandra.db.partitions.PartitionIterator",
        "ranges": "java.util.Iterator",
        "command": "org.apache.cassandra.db.PartitionRangeReadCommand"
    },
    "org.apache.cassandra.db.ClusteringPrefix$Kind": {
        "CLUSTERING": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "EXCL_START_BOUND": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "EXCL_END_INCL_START_BOUNDARY": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "STATIC_CLUSTERING": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "EXCL_END_BOUND": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "INCL_END_BOUND": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "$VALUES": "org.apache.cassandra.db.ClusteringPrefix$Kind[]",
        "INCL_START_BOUND": "org.apache.cassandra.db.ClusteringPrefix$Kind",
        "INCL_END_EXCL_START_BOUNDARY": "org.apache.cassandra.db.ClusteringPrefix$Kind"
    },
    "org.apache.cassandra.db.filter.RowFilter$Expression$Kind": {
        "CUSTOM": "org.apache.cassandra.db.filter.RowFilter$Expression$Kind",
        "SIMPLE": "org.apache.cassandra.db.filter.RowFilter$Expression$Kind",
        "MAP_EQUALITY": "org.apache.cassandra.db.filter.RowFilter$Expression$Kind",
        "THRIFT_DYN_EXPR": "org.apache.cassandra.db.filter.RowFilter$Expression$Kind"
    },
    "org.apache.cassandra.dht.AbstractBounds": {
        "left": "org.apache.cassandra.dht.RingPosition",
        "right": "org.apache.cassandra.dht.RingPosition"
    },
    "org.apache.cassandra.db.filter.DataLimits$SuperColumnCountingLimits": {
        "partitionLimit": "int"
    },
    "org.apache.cassandra.db.compaction.Scrubber$OrderCheckerIterator": {
        "previous": "org.apache.cassandra.db.rows.Unfiltered",
        "iterator": "org.apache.cassandra.db.rows.UnfilteredRowIterator"
    },
    "org.apache.cassandra.utils.AbstractIterator": {
        "next": "java.lang.Object"
    },
    "org.apache.cassandra.db.LegacyLayout$CellGrouper": {
        "builder": "org.apache.cassandra.db.rows.Row$Builder",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "clustering": "org.apache.cassandra.db.Clustering"
    },
    "org.apache.cassandra.service.pager.AbstractQueryPager$RowPager": {
        "counter": "org.apache.cassandra.db.filter.DataLimits$Counter"
    },
    "org.apache.cassandra.schema.IndexMetadata": {
        "name": "java.lang.String",
        "kind": "org.apache.cassandra.schema.IndexMetadata$Kind"
    },
    "org.apache.cassandra.index.SecondaryIndexManager": {
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.utils.MergeIterator$ManyToOne": {
        "heap": "org.apache.cassandra.utils.MergeIterator$Candidate[]",
        "reducer": "org.apache.cassandra.utils.MergeIterator$Reducer"
    },
    "org.apache.cassandra.db.view.ViewManager": {
        "keyspace": "org.apache.cassandra.db.Keyspace",
        "viewsByName": "java.util.concurrent.ConcurrentMap",
        "viewsByBaseTable": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.streaming.StreamCoordinator$StreamSessionConnector": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.index.SecondaryIndexBuilder": {
        "iter": "org.apache.cassandra.io.sstable.ReducingKeyIterator",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.db.DataRange": {
        "keyRange": "org.apache.cassandra.dht.AbstractBounds",
        "clusteringIndexFilter": "org.apache.cassandra.db.filter.ClusteringIndexFilter"
    },
    "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer": {
        "serializer": "org.apache.cassandra.db.rows.UnfilteredRowIteratorSerializer"
    },
    "org.apache.cassandra.schema.CompressionParams": {
        "chunkLength": "java.lang.Integer"
    },
    "org.apache.cassandra.db.Columns": {
        "complexIdx": "int",
        "NONE": "org.apache.cassandra.db.Columns",
        "columns": "java.lang.Object[]"
    },
    "org.apache.cassandra.db.view.ViewBuilder": {
        "view": "org.apache.cassandra.db.view.View",
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.streaming.StreamWriter": {
        "compressedOutput": "java.io.OutputStream",
        "session": "org.apache.cassandra.streaming.StreamSession",
        "transferBuffer": "byte[]"
    },
    "org.apache.cassandra.streaming.compress.CompressionInfo": {
        "parameters": "org.apache.cassandra.schema.CompressionParams",
        "chunks": "org.apache.cassandra.io.compress.CompressionMetadata$Chunk[]"
    },
    "org.apache.cassandra.streaming.compress.CompressedStreamReader": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.streaming.compress.CompressedStreamWriter": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.repair.RepairJobDesc": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "ranges": "java.util.Collection"
    },
    "org.apache.cassandra.io.sstable.IndexSummary": {
        "entries": "org.apache.cassandra.io.util.Memory",
        "minIndexInterval": "int",
        "entriesLength": "long",
        "samplingLevel": "int",
        "sizeAtFullSampling": "int",
        "offsetCount": "int"
    },
    "org.apache.cassandra.io.sstable.IndexSummaryBuilder": {
        "entries": "org.apache.cassandra.io.util.SafeMemoryWriter",
        "minIndexInterval": "int",
        "offsets": "org.apache.cassandra.io.util.SafeMemoryWriter",
        "lastReadableBoundary": "org.apache.cassandra.io.sstable.IndexSummaryBuilder$ReadableBoundary",
        "keysWritten": "long",
        "samplingLevel": "int",
        "defaultExpectedKeySize": "long"
    },
    "org.apache.cassandra.service.StorageProxy$RangeMerger": {
        "ranges": "com.google.common.collect.PeekingIterator"
    },
    "org.apache.cassandra.schema.SpeculativeRetryParam": {
        "kind": "org.apache.cassandra.schema.SpeculativeRetryParam$Kind"
    },
    "org.apache.cassandra.index.SecondaryIndexManager$IndexGCTransaction": {
        "rows": "org.apache.cassandra.db.rows.Row[]"
    },
    "org.apache.cassandra.service.DataResolver$ShortReadPartitionsProtection$ShortReadRowsProtection": {
        "lastQueried": "int",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "this$1": "org.apache.cassandra.service.DataResolver$ShortReadPartitionsProtection",
        "lastClustering": "org.apache.cassandra.db.Clustering"
    },
    "org.apache.cassandra.io.util.ChannelProxy": {
        "filePath": "java.lang.String"
    },
    "org.apache.cassandra.streaming.StreamReader$StreamDeserializer": {
        "iterator": "org.apache.cassandra.io.sstable.SSTableSimpleIterator",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.serializers.BooleanSerializer": {
        "TRUE": "java.nio.ByteBuffer",
        "FALSE": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.service.pager.AbstractQueryPager$UnfilteredPager": {
        "counter": "org.apache.cassandra.db.filter.DataLimits$Counter"
    },
    "org.apache.cassandra.streaming.StreamReader": {
        "header": "org.apache.cassandra.db.SerializationHeader$Component",
        "estimatedKeys": "long",
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.db.marshal.CompositeType$Builder": {
        "components": "java.util.List"
    },
    "org.apache.cassandra.db.columniterator.SSTableReversedIterator$ReverseReader": {
        "deserializer": "org.apache.cassandra.db.UnfilteredDeserializer",
        "iterator": "java.util.Iterator",
        "openMarker": "org.apache.cassandra.db.DeletionTime",
        "buffer": "org.apache.cassandra.db.columniterator.SSTableReversedIterator$ReusablePartitionData"
    },
    "org.apache.cassandra.io.util.DataOutputStreamPlus": {
        "channel": "java.nio.channels.WritableByteChannel"
    },
    "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator": {
        "mergeIterator": "org.apache.cassandra.utils.IMergeIterator"
    },
    "org.apache.cassandra.dht.Murmur3Partitioner": {
        "MINIMUM": "org.apache.cassandra.dht.Murmur3Partitioner$LongToken"
    },
    "org.apache.cassandra.db.filter.AbstractClusteringIndexFilter": {
        "reversed": "boolean"
    },
    "org.apache.cassandra.db.marshal.CompositeType": {
        "instances": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.config.CFMetaData": {
        "ksName": "java.lang.String",
        "columnMetadata": "java.util.Map",
        "partitionColumns": "org.apache.cassandra.db.PartitionColumns",
        "droppedColumns": "java.util.Map",
        "compactValueColumn": "org.apache.cassandra.config.ColumnDefinition",
        "params": "org.apache.cassandra.schema.TableParams",
        "triggers": "org.apache.cassandra.schema.Triggers",
        "cfId": "java.util.UUID",
        "clusteringColumns": "java.util.List",
        "regularColumns": "java.util.List",
        "indexes": "org.apache.cassandra.schema.Indexes",
        "partitionKeyColumns": "java.util.List",
        "ksAndCFBytes": "byte[]",
        "cfName": "java.lang.String"
    },
    "org.apache.cassandra.db.filter.ColumnSubselection$Kind": {
        "ELEMENT": "org.apache.cassandra.db.filter.ColumnSubselection$Kind",
        "SLICE": "org.apache.cassandra.db.filter.ColumnSubselection$Kind"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableScanner$KeyScanningIterator": {
        "currentKey": "org.apache.cassandra.db.DecoratedKey",
        "nextKey": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.LivenessInfo$ExpiringLivenessInfo": {
        "ttl": "int",
        "localExpirationTime": "int"
    },
    "org.apache.cassandra.service.StorageProxy$WriteResponseHandlerWrapper": {
        "mutation": "org.apache.cassandra.db.Mutation",
        "handler": "org.apache.cassandra.service.BatchlogResponseHandler"
    },
    "org.apache.cassandra.schema.KeyspaceParams": {
        "durableWrites": "boolean"
    },
    "org.apache.cassandra.utils.btree.BTreeSearchIterator": {
        "cur": "org.apache.cassandra.utils.btree.NodeCursor",
        "index": "int",
        "lowerBound": "int",
        "upperBound": "int"
    },
    "org.apache.cassandra.db.compaction.writers.MajorLeveledCompactionWriter": {
        "nonExpiredSSTables": "java.util.Set",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "allSSTables": "java.util.Set",
        "averageEstimatedKeysPerSSTable": "long",
        "sstablesWritten": "int",
        "partitionsWritten": "long"
    },
    "org.apache.cassandra.utils.btree.UpdateFunction": {
        "noOp": "org.apache.cassandra.utils.btree.UpdateFunction$Simple"
    },
    "org.apache.cassandra.schema.SchemaKeyspace": {
        "Types": "org.apache.cassandra.config.CFMetaData",
        "Views": "org.apache.cassandra.config.CFMetaData",
        "Aggregates": "org.apache.cassandra.config.CFMetaData",
        "Keyspaces": "org.apache.cassandra.config.CFMetaData",
        "Columns": "org.apache.cassandra.config.CFMetaData",
        "Tables": "org.apache.cassandra.config.CFMetaData",
        "Functions": "org.apache.cassandra.config.CFMetaData",
        "Triggers": "org.apache.cassandra.config.CFMetaData",
        "Indexes": "org.apache.cassandra.config.CFMetaData",
        "DroppedColumns": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.utils.MergeIterator$OneToOne": {
        "reducer": "org.apache.cassandra.utils.MergeIterator$Reducer",
        "source": "java.util.Iterator"
    },
    "org.apache.cassandra.db.RangeTombstone": {
        "deletion": "org.apache.cassandra.db.DeletionTime",
        "slice": "org.apache.cassandra.db.Slice"
    },
    "org.apache.cassandra.db.ColumnFamilyStore": {
        "keyspace": "org.apache.cassandra.db.Keyspace",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "crcCheckChance": "org.apache.cassandra.utils.DefaultValue",
        "data": "org.apache.cassandra.db.lifecycle.Tracker",
        "metric": "org.apache.cassandra.metrics.TableMetrics",
        "compactionStrategyManager": "org.apache.cassandra.db.compaction.CompactionStrategyManager",
        "indexManager": "org.apache.cassandra.index.SecondaryIndexManager",
        "maxCompactionThreshold": "org.apache.cassandra.utils.DefaultValue"
    },
    "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$IndexState": {
        "indexes": "java.util.List",
        "reader": "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$Reader"
    },
    "org.apache.cassandra.db.compaction.writers.CompactionAwareWriter": {
        "nonExpiredSSTables": "java.util.Set",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "estimatedTotalKeys": "long"
    },
    "org.apache.cassandra.service.pager.AbstractQueryPager": {
        "remainingInPartition": "int",
        "command": "org.apache.cassandra.db.ReadCommand",
        "remaining": "int",
        "limits": "org.apache.cassandra.db.filter.DataLimits"
    },
    "org.apache.cassandra.db.compaction.writers.MaxSSTableSizeWriter": {
        "nonExpiredSSTables": "java.util.Set",
        "estimatedSSTables": "long",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "allSSTables": "java.util.Set",
        "estimatedTotalKeys": "long"
    },
    "org.apache.cassandra.db.filter.DataLimits$ThriftLimits$ThriftCounter": {
        "cellsCounted": "int"
    },
    "org.apache.cassandra.db.commitlog.ReplayPosition": {
        "position": "int",
        "NONE": "org.apache.cassandra.db.commitlog.ReplayPosition",
        "segment": "long"
    },
    "org.apache.cassandra.db.rows.BTreeRow$CellInLegacyOrderIterator": {
        "data": "java.lang.Object[]",
        "complexCells": "java.util.Iterator"
    },
    "org.apache.cassandra.io.sstable.SimpleSSTableMultiWriter": {
        "writer": "org.apache.cassandra.io.sstable.format.SSTableWriter"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList": {
        "markedAts": "long[]",
        "size": "int",
        "delTimes": "int[]",
        "starts": "org.apache.cassandra.db.LegacyLayout$LegacyBound[]",
        "ends": "org.apache.cassandra.db.LegacyLayout$LegacyBound[]"
    },
    "org.apache.cassandra.db.lifecycle.LogTransaction": {
        "tracker": "org.apache.cassandra.db.lifecycle.Tracker"
    },
    "org.apache.cassandra.metrics.TableMetrics": {
        "compressionMetadataOffHeapMemoryUsed": "com.codahale.metrics.Gauge",
        "allMemtablesLiveDataSize": "com.codahale.metrics.Gauge",
        "bloomFilterDiskSpaceUsed": "com.codahale.metrics.Gauge",
        "pendingCompactions": "com.codahale.metrics.Gauge",
        "allTableMetrics": "java.util.concurrent.ConcurrentMap",
        "memtableOffHeapSize": "com.codahale.metrics.Gauge",
        "allMemtablesOffHeapSize": "com.codahale.metrics.Gauge",
        "memtableLiveDataSize": "com.codahale.metrics.Gauge",
        "allMemtablesOnHeapSize": "com.codahale.metrics.Gauge",
        "bloomFilterOffHeapMemoryUsed": "com.codahale.metrics.Gauge",
        "compressionRatio": "com.codahale.metrics.Gauge",
        "indexSummaryOffHeapMemoryUsed": "com.codahale.metrics.Gauge",
        "memtableColumnsCount": "com.codahale.metrics.Gauge",
        "memtableOnHeapSize": "com.codahale.metrics.Gauge"
    },
    "org.apache.cassandra.dht.ComparableObjectToken": {
        "token": "java.lang.Comparable"
    },
    "org.apache.cassandra.db.marshal.TupleType": {
        "types": "java.util.List"
    },
    "org.apache.cassandra.db.filter.RowFilter$Expression": {
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "value": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.filter.RowFilter$SimpleExpression": {
        "value": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.Clustering": {
        "STATIC_CLUSTERING": "org.apache.cassandra.db.Clustering",
        "EMPTY": "org.apache.cassandra.db.Clustering"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter": {
        "summary": "org.apache.cassandra.io.sstable.IndexSummaryBuilder",
        "indexFile": "org.apache.cassandra.io.util.SequentialWriter",
        "bf": "org.apache.cassandra.utils.IFilter"
    },
    "org.apache.cassandra.db.Memtable$MemtableUnfilteredPartitionIterator": {
        "isForThrift": "boolean",
        "iter": "java.util.Iterator",
        "dataRange": "org.apache.cassandra.db.DataRange",
        "columnFilter": "org.apache.cassandra.db.filter.ColumnFilter"
    },
    "org.apache.cassandra.streaming.ConnectionHandler$MessageHandler": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.service.pager.MultiPartitionPager$PagersIterator": {
        "result": "org.apache.cassandra.db.partitions.PartitionIterator",
        "pageSize": "int",
        "counter": "org.apache.cassandra.db.filter.DataLimits$Counter"
    },
    "org.apache.cassandra.db.rows.RangeTombstoneBoundaryMarker": {
        "endDeletion": "org.apache.cassandra.db.DeletionTime",
        "startDeletion": "org.apache.cassandra.db.DeletionTime",
        "bound": "org.apache.cassandra.db.RangeTombstone$Bound"
    },
    "org.apache.cassandra.db.rows.CellPath": {
        "TOP": "org.apache.cassandra.db.rows.CellPath",
        "BOTTOM": "org.apache.cassandra.db.rows.CellPath"
    },
    "org.apache.cassandra.utils.Interval": {
        "min": "java.lang.Object",
        "data": "java.lang.Object",
        "max": "java.lang.Object"
    },
    "org.apache.cassandra.metrics.CassandraMetricsRegistry$MetricName": {
        "mBeanName": "java.lang.String"
    },
    "org.apache.cassandra.utils.btree.BTree$FiltrationTracker": {
        "wrapped": "com.google.common.base.Function"
    },
    "org.apache.cassandra.db.columniterator.SSTableReversedIterator": {
        "columns": "org.apache.cassandra.db.filter.ColumnFilter",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.marshal.UserType": {
        "name": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.io.util.CompressedSegmentedFile$Builder": {
        "writer": "org.apache.cassandra.io.compress.CompressedSequentialWriter"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableWriter$StatsCollector": {
        "collector": "org.apache.cassandra.io.sstable.metadata.MetadataCollector"
    },
    "org.apache.cassandra.service.AbstractReadExecutor$NeverSpeculatingReadExecutor": {
        "targetReplicas": "java.util.List"
    },
    "org.apache.cassandra.service.ReadCallback$AsyncRepairRunner": {
        "traceState": "org.apache.cassandra.tracing.TraceState"
    },
    "org.apache.cassandra.db.compaction.LeveledCompactionStrategy": {
        "manifest": "org.apache.cassandra.db.compaction.LeveledManifest"
    },
    "org.apache.cassandra.db.ReadResponse$DataResponse": {
        "data": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.MultiCBuilder": {
        "elementsList": "java.util.List"
    },
    "org.apache.cassandra.index.SecondaryIndexManager$WriteTimeTransaction": {
        "indexers": "org.apache.cassandra.index.Index$Indexer[]"
    },
    "org.apache.cassandra.index.internal.IndexEntry": {
        "indexClustering": "org.apache.cassandra.db.Clustering",
        "indexedKey": "java.nio.ByteBuffer",
        "indexedEntryClustering": "org.apache.cassandra.db.Clustering",
        "indexValue": "org.apache.cassandra.db.DecoratedKey",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.Slice": {
        "start": "org.apache.cassandra.db.Slice$Bound",
        "ALL": "org.apache.cassandra.db.Slice",
        "end": "org.apache.cassandra.db.Slice$Bound"
    },
    "org.apache.cassandra.db.PartitionColumns": {
        "NONE": "org.apache.cassandra.db.PartitionColumns",
        "regulars": "org.apache.cassandra.db.Columns",
        "statics": "org.apache.cassandra.db.Columns"
    },
    "org.apache.cassandra.db.SnapshotCommand": {
        "snapshot_name": "java.lang.String",
        "clear_snapshot": "boolean",
        "keyspace": "java.lang.String",
        "column_family": "java.lang.String"
    },
    "org.apache.cassandra.utils.FBUtilities": {
        "localInetAddress": "java.net.InetAddress",
        "broadcastInetAddress": "java.net.InetAddress"
    },
    "org.apache.cassandra.db.lifecycle.LogRecord": {
        "raw": "java.lang.String"
    },
    "org.apache.cassandra.repair.RepairSession": {
        "endpoints": "java.util.Set"
    },
    "org.apache.cassandra.batchlog.BatchlogManager$ReplayingBatch": {
        "writtenAt": "long",
        "mutations": "java.util.List",
        "replayHandlers": "java.util.List"
    },
    "org.apache.cassandra.db.ColumnIndex$Builder": {
        "previousRowStart": "long",
        "iterator": "org.apache.cassandra.db.rows.UnfilteredRowIterator",
        "headerLength": "long",
        "columnsIndex": "java.util.List",
        "lastClustering": "org.apache.cassandra.db.ClusteringPrefix",
        "firstClustering": "org.apache.cassandra.db.ClusteringPrefix",
        "initialPosition": "long",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "openMarker": "org.apache.cassandra.db.DeletionTime",
        "writer": "org.apache.cassandra.io.util.SequentialWriter",
        "startPosition": "long"
    },
    "org.apache.cassandra.utils.DefaultValue": {
        "originalValue": "java.lang.Object",
        "currentValue": "java.lang.Object"
    },
    "org.apache.cassandra.service.pager.SinglePartitionPager": {
        "command": "org.apache.cassandra.db.SinglePartitionReadCommand"
    },
    "org.apache.cassandra.db.compaction.CompactionIterator": {
        "scanners": "java.util.List",
        "controller": "org.apache.cassandra.db.compaction.CompactionController",
        "compacted": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterator"
    },
    "org.apache.cassandra.utils.IntervalTree$IntervalNode": {
        "intersectsLeft": "java.util.List",
        "right": "org.apache.cassandra.utils.IntervalTree$IntervalNode",
        "left": "org.apache.cassandra.utils.IntervalTree$IntervalNode",
        "intersectsRight": "java.util.List"
    },
    "org.apache.cassandra.utils.btree.NodeCursor": {
        "node": "java.lang.Object[]",
        "parent": "org.apache.cassandra.utils.btree.NodeCursor",
        "position": "int",
        "nodeOffset": "int",
        "child": "org.apache.cassandra.utils.btree.NodeCursor"
    },
    "org.apache.cassandra.config.CFMetaData$DroppedColumn": {
        "name": "java.lang.String"
    },
    "org.apache.cassandra.io.util.WrappedDataOutputStreamPlus": {
        "out": "java.io.OutputStream"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator$AtomIterator": {
        "next": "org.apache.cassandra.db.LegacyLayout$LegacyAtom",
        "atomReader": "java.util.function.Supplier"
    },
    "org.apache.cassandra.io.util.UnbufferedDataOutputStreamPlus": {
        "channel": "java.nio.channels.WritableByteChannel",
        "zeroBytes": "byte[]"
    },
    "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardIndexedReader": {
        "indexState": "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$IndexState",
        "deserializer": "org.apache.cassandra.db.UnfilteredDeserializer"
    },
    "org.apache.cassandra.db.compaction.writers.DefaultCompactionWriter": {
        "nonExpiredSSTables": "java.util.Set",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "estimatedTotalKeys": "long"
    },
    "org.apache.cassandra.db.marshal.SetType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "elements": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.ReadCommand": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "columnFilter": "org.apache.cassandra.db.filter.ColumnFilter",
        "kind": "org.apache.cassandra.db.ReadCommand$Kind",
        "digestVersion": "int",
        "isForThrift": "boolean",
        "nowInSec": "int",
        "rowFilter": "org.apache.cassandra.db.filter.RowFilter",
        "limits": "org.apache.cassandra.db.filter.DataLimits",
        "isDigestQuery": "boolean"
    },
    "org.apache.cassandra.service.pager.AbstractQueryPager$Pager": {
        "lastRow": "org.apache.cassandra.db.rows.Row",
        "counter": "org.apache.cassandra.db.filter.DataLimits$Counter"
    },
    "org.apache.cassandra.db.CBuilder$ArrayBackedBuilder": {
        "values": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer": {
        "complexBuilder": "org.apache.cassandra.db.rows.ComplexColumnData$Builder",
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "cellReducer": "org.apache.cassandra.db.rows.Row$Merger$CellReducer",
        "complexCells": "java.util.List",
        "versions": "java.util.List"
    },
    "org.apache.cassandra.db.marshal.Int32Type": {
        "instance": "org.apache.cassandra.db.marshal.Int32Type"
    },
    "org.apache.cassandra.db.marshal.ListType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "elements": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.Slices$ArrayBackedSlices": {
        "slices": "org.apache.cassandra.db.Slice[]"
    },
    "org.apache.cassandra.utils.EstimatedHistogram": {
        "bucketOffsets": "long[]"
    },
    "org.apache.cassandra.db.transform.BaseRows": {
        "next": "java.lang.Object",
        "stack": "org.apache.cassandra.db.transform.Transformation[]",
        "staticRow": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.schema.LegacySchemaMigrator$Aggregate": {
        "timestamp": "long"
    },
    "org.apache.cassandra.db.filter.DataLimits$ThriftLimits": {
        "partitionLimit": "int",
        "cellPerPartitionLimit": "int"
    },
    "org.apache.cassandra.streaming.StreamRequest": {
        "keyspace": "java.lang.String",
        "repairedAt": "long",
        "columnFamilies": "java.util.Collection",
        "ranges": "java.util.Collection"
    },
    "org.apache.cassandra.db.filter.DataLimits$Kind": {
        "CQL_PAGING_LIMIT": "org.apache.cassandra.db.filter.DataLimits$Kind",
        "THRIFT_LIMIT": "org.apache.cassandra.db.filter.DataLimits$Kind",
        "SUPER_COLUMN_COUNTING_LIMIT": "org.apache.cassandra.db.filter.DataLimits$Kind",
        "CQL_LIMIT": "org.apache.cassandra.db.filter.DataLimits$Kind"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableWriter": {
        "metadataCollector": "org.apache.cassandra.io.sstable.metadata.MetadataCollector",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "lastWrittenKey": "org.apache.cassandra.db.DecoratedKey",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "iwriter": "org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter",
        "dataFile": "org.apache.cassandra.io.util.SequentialWriter",
        "first": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.rows.RangeTombstoneBoundMarker": {
        "deletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.notifications.MemtableRenewedNotification": {
        "renewed": "org.apache.cassandra.db.Memtable"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyBound": {
        "bound": "org.apache.cassandra.db.Slice$Bound",
        "collectionName": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.db.transform.Stack$MoreContentsHolder": {
        "moreContents": "org.apache.cassandra.db.transform.MoreContents"
    },
    "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators": {
        "serializer": "org.apache.cassandra.db.partitions.UnfilteredPartitionIterators$Serializer"
    },
    "org.apache.cassandra.db.rows.SerializationHelper": {
        "columnsToFetch": "org.apache.cassandra.db.filter.ColumnFilter",
        "droppedColumns": "java.util.Map"
    },
    "org.apache.cassandra.hints.HintsCatalog": {
        "stores": "java.util.Map"
    },
    "org.apache.cassandra.db.ReadQuery": {
        "EMPTY": "org.apache.cassandra.db.ReadQuery"
    },
    "org.apache.cassandra.service.StorageProxy$RangeIterator": {
        "ranges": "java.util.Iterator"
    },
    "org.apache.cassandra.metrics.KeyspaceMetrics": {
        "keyspace": "org.apache.cassandra.db.Keyspace"
    },
    "org.apache.cassandra.db.compaction.CompactionManager$BackgroundCompactionCandidate": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.db.compaction.LeveledManifest": {
        "generations": "java.util.List[]"
    },
    "org.apache.cassandra.hints.HintsBuffer$Allocation": {
        "totalSize": "int"
    },
    "org.apache.cassandra.db.DecoratedKey": {
        "token": "org.apache.cassandra.dht.Token"
    },
    "org.apache.cassandra.db.columniterator.SSTableReversedIterator$ReusablePartitionData": {
        "deletionInfo": "org.apache.cassandra.db.MutableDeletionInfo",
        "deletionBuilder": "org.apache.cassandra.db.MutableDeletionInfo$Builder",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "built": "org.apache.cassandra.db.partitions.ImmutableBTreePartition",
        "columns": "org.apache.cassandra.db.PartitionColumns",
        "rowBuilder": "org.apache.cassandra.utils.btree.BTree$Builder"
    },
    "org.apache.cassandra.transport.messages.ExecuteMessage": {
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.db.marshal.TypeParser": {
        "cache": "java.util.Map"
    },
    "org.apache.cassandra.db.rows.UnfilteredRowIterators$UnfilteredRowMergeIterator$MergeReducer": {
        "listener": "org.apache.cassandra.db.rows.UnfilteredRowIterators$MergeListener",
        "markerMerger": "org.apache.cassandra.db.rows.RangeTombstoneMarker$Merger",
        "rowMerger": "org.apache.cassandra.db.rows.Row$Merger"
    },
    "org.apache.cassandra.io.sstable.SSTableSimpleIterator$CurrentFormatIterator": {
        "builder": "org.apache.cassandra.db.rows.Row$Builder",
        "header": "org.apache.cassandra.db.SerializationHeader"
    },
    "org.apache.cassandra.utils.MerkleTree$Inner": {
        "rchild": "org.apache.cassandra.utils.MerkleTree$Hashable",
        "hash": "byte[]",
        "token": "org.apache.cassandra.dht.Token",
        "lchild": "org.apache.cassandra.utils.MerkleTree$Hashable"
    },
    "org.apache.cassandra.utils.IntervalTree$TreeIterator": {
        "current": "java.util.Iterator"
    },
    "org.apache.cassandra.db.rows.RowAndDeletionMergeIterator": {
        "nextRow": "org.apache.cassandra.db.rows.Row",
        "selection": "org.apache.cassandra.db.filter.ColumnFilter",
        "ranges": "java.util.Iterator",
        "nextRange": "org.apache.cassandra.db.RangeTombstone",
        "openRange": "org.apache.cassandra.db.RangeTombstone",
        "rows": "java.util.Iterator"
    },
    "org.apache.cassandra.utils.IntervalTree": {
        "head": "org.apache.cassandra.utils.IntervalTree$IntervalNode",
        "count": "int"
    },
    "org.apache.cassandra.db.ReadCommand$Kind": {
        "PARTITION_RANGE": "org.apache.cassandra.db.ReadCommand$Kind",
        "SINGLE_PARTITION": "org.apache.cassandra.db.ReadCommand$Kind"
    },
    "org.apache.cassandra.service.AbstractReadExecutor$AlwaysSpeculatingReadExecutor": {
        "targetReplicas": "java.util.List"
    },
    "org.apache.cassandra.db.TruncateResponse": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "success": "boolean"
    },
    "org.apache.cassandra.io.util.Memory": {
        "size": "long",
        "NO_BYTE_BUFFERS": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.io.util.SafeMemoryWriter": {
        "memory": "org.apache.cassandra.io.util.SafeMemory"
    },
    "org.apache.cassandra.transport.messages.QueryMessage": {
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.dht.tokenallocator.ReplicationAwareTokenAllocator$GroupInfo": {
        "group": "java.lang.Object"
    },
    "org.apache.cassandra.schema.TableParams$Builder": {
        "gcGraceSeconds": "int",
        "minIndexInterval": "int",
        "defaultTimeToLive": "int"
    },
    "org.apache.cassandra.io.sstable.metadata.StatsMetadata": {
        "minTTL": "int",
        "maxTimestamp": "long",
        "maxTTL": "int",
        "estimatedColumnCount": "org.apache.cassandra.utils.EstimatedHistogram",
        "totalColumnsSet": "long",
        "repairedAt": "long",
        "totalRows": "long",
        "maxLocalDeletionTime": "int",
        "compressionRatio": "double",
        "estimatedPartitionSize": "org.apache.cassandra.utils.EstimatedHistogram",
        "commitLogIntervals": "org.apache.cassandra.db.commitlog.IntervalSet",
        "estimatedTombstoneDropTime": "org.apache.cassandra.utils.StreamingHistogram",
        "hasLegacyCounterShards": "boolean",
        "maxClusteringValues": "java.util.List",
        "minLocalDeletionTime": "int",
        "sstableLevel": "int",
        "minTimestamp": "long",
        "minClusteringValues": "java.util.List"
    },
    "org.apache.cassandra.db.Directories": {
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.transport.Frame": {
        "body": "io.netty.buffer.ByteBuf"
    },
    "org.apache.cassandra.db.SerializationHeader$Component": {
        "regularColumns": "java.util.Map",
        "staticColumns": "java.util.Map",
        "stats": "org.apache.cassandra.db.rows.EncodingStats"
    },
    "org.apache.cassandra.db.partitions.PartitionUpdate": {
        "deletionInfo": "org.apache.cassandra.db.MutableDeletionInfo",
        "rowBuilder": "org.apache.cassandra.utils.btree.BTree$Builder",
        "holder": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder"
    },
    "org.apache.cassandra.io.util.SegmentedFile": {
        "length": "long",
        "onDiskLength": "long"
    },
    "org.apache.cassandra.utils.FBUtilities$WrappedCloseableIterator": {
        "source": "java.util.Iterator"
    },
    "org.apache.cassandra.schema.LegacySchemaMigrator$Keyspace": {
        "types": "java.util.Collection",
        "tables": "java.util.Collection",
        "functions": "java.util.Collection",
        "name": "java.lang.String",
        "aggregates": "java.util.Collection",
        "params": "org.apache.cassandra.schema.KeyspaceParams",
        "timestamp": "long"
    },
    "org.apache.cassandra.index.internal.CassandraIndexSearcher": {
        "index": "org.apache.cassandra.index.internal.CassandraIndex",
        "expression": "org.apache.cassandra.db.filter.RowFilter$Expression",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.transport.messages.BatchMessage": {
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.schema.TriggerMetadata": {
        "name": "java.lang.String"
    },
    "org.apache.cassandra.db.compaction.OperationType": {
        "type": "java.lang.String"
    },
    "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession": {
        "ranges": "java.util.Collection"
    },
    "org.apache.cassandra.db.compaction.writers.SplittingSizeTieredCompactionWriter": {
        "nonExpiredSSTables": "java.util.Set",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "allSSTables": "java.util.Set",
        "estimatedTotalKeys": "long",
        "ratios": "double[]"
    },
    "org.apache.cassandra.db.filter.ColumnSubselection$Element": {
        "element": "org.apache.cassandra.db.rows.CellPath"
    },
    "org.apache.cassandra.db.RowUpdateBuilder": {
        "mutation": "org.apache.cassandra.db.Mutation",
        "staticBuilder": "org.apache.cassandra.db.rows.Row$Builder",
        "update": "org.apache.cassandra.db.partitions.PartitionUpdate",
        "localDeletionTime": "int",
        "ttl": "int",
        "timestamp": "long",
        "regularBuilder": "org.apache.cassandra.db.rows.Row$Builder"
    },
    "org.apache.cassandra.db.filter.RowFilter": {
        "NONE": "org.apache.cassandra.db.filter.RowFilter",
        "expressions": "java.util.List"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableScanner$EmptySSTableScanner": {
        "sstable": "org.apache.cassandra.io.sstable.format.SSTableReader"
    },
    "org.apache.cassandra.db.EmptyIterators$EmptyBaseRowIterator": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "columns": "org.apache.cassandra.db.PartitionColumns"
    },
    "org.apache.cassandra.db.compaction.CompactionIterator$Purger": {
        "purgeEvaluator": "java.util.function.Predicate",
        "controller": "org.apache.cassandra.db.compaction.CompactionController"
    },
    "org.apache.cassandra.io.sstable.BloomFilterTracker": {
        "lastTruePositiveCount": "long",
        "lastFalsePositiveCount": "long"
    },
    "org.apache.cassandra.db.ReadResponse$DigestResponse": {
        "digest": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyDeletionInfo": {
        "deletionInfo": "org.apache.cassandra.db.MutableDeletionInfo"
    },
    "org.apache.cassandra.db.marshal.ReversedType": {
        "instances": "java.util.Map",
        "baseType": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.MutableDeletionInfo$Builder": {
        "deletion": "org.apache.cassandra.db.MutableDeletionInfo",
        "openMarker": "org.apache.cassandra.db.rows.RangeTombstoneMarker"
    },
    "org.apache.cassandra.db.compaction.Scrubber$RowMergingSSTableIterator": {
        "iterator": "org.apache.cassandra.io.sstable.SSTableSimpleIterator"
    },
    "org.apache.cassandra.cache.CounterCacheKey": {
        "partitionKey": "byte[]",
        "cellName": "byte[]"
    },
    "org.apache.cassandra.db.partitions.AbstractBTreePartition$AbstractIterator": {
        "current": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "selection": "org.apache.cassandra.db.filter.ColumnFilter",
        "staticRow": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.db.marshal.LongType": {
        "instance": "org.apache.cassandra.db.marshal.LongType"
    },
    "org.apache.cassandra.db.ReadCommand$LegacyType": {
        "serializedValue": "byte",
        "GET_BY_NAMES": "org.apache.cassandra.db.ReadCommand$LegacyType",
        "GET_SLICES": "org.apache.cassandra.db.ReadCommand$LegacyType"
    },
    "org.apache.cassandra.service.BatchlogResponseHandler": {
        "wrapped": "org.apache.cassandra.service.AbstractWriteResponseHandler"
    },
    "org.apache.cassandra.thrift.Column": {
        "name": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.service.CacheService$CacheType": {
        "name": "java.lang.String"
    },
    "org.apache.cassandra.service.DigestResolver": {
        "dataResponse": "org.apache.cassandra.db.ReadResponse",
        "responses": "org.apache.cassandra.utils.concurrent.Accumulator",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.streaming.StreamEvent$SessionCompleteEvent": {
        "requests": "java.util.Set"
    },
    "org.apache.cassandra.transport.DataType": {
        "SET": "org.apache.cassandra.transport.DataType",
        "UDT": "org.apache.cassandra.transport.DataType",
        "dataTypeMap": "java.util.Map",
        "CUSTOM": "org.apache.cassandra.transport.DataType",
        "MAP": "org.apache.cassandra.transport.DataType",
        "LIST": "org.apache.cassandra.transport.DataType",
        "TUPLE": "org.apache.cassandra.transport.DataType"
    },
    "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList": {
        "scanners": "java.util.List"
    },
    "org.apache.cassandra.utils.btree.BTreeSet": {
        "tree": "java.lang.Object[]"
    },
    "org.apache.cassandra.db.compaction.Scrubber": {
        "indexFile": "org.apache.cassandra.io.util.RandomAccessReader",
        "dataFile": "org.apache.cassandra.io.util.RandomAccessReader"
    },
    "org.apache.cassandra.hints.HintsStore": {
        "lastUsedTimestamp": "long",
        "hostId": "java.util.UUID"
    },
    "org.apache.cassandra.db.filter.RowFilter$MapEqualityExpression": {
        "value": "java.nio.ByteBuffer",
        "key": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.Keyspace": {
        "replicationStrategy": "org.apache.cassandra.locator.AbstractReplicationStrategy",
        "columnFamilyStores": "java.util.concurrent.ConcurrentMap",
        "viewManager": "org.apache.cassandra.db.view.ViewManager"
    },
    "org.apache.cassandra.io.util.SequentialWriter": {
        "bufferOffset": "long"
    },
    "org.apache.cassandra.db.view.TableViews$DeletionTracker": {
        "deletion": "org.apache.cassandra.db.DeletionTime",
        "partitionDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.BufferDecoratedKey": {
        "key": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.hints.HintsWriteExecutor": {
        "writeBuffer": "java.nio.ByteBuffer",
        "catalog": "org.apache.cassandra.hints.HintsCatalog"
    },
    "org.apache.cassandra.schema.LegacySchemaMigrator$Table": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.partitions.AbstractBTreePartition$SliceableIterator": {
        "current": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "iterator": "java.util.Iterator",
        "selection": "org.apache.cassandra.db.filter.ColumnFilter",
        "staticRow": "org.apache.cassandra.db.rows.Row"
    },
    "org.apache.cassandra.io.sstable.metadata.ValidationMetadata": {
        "bloomFilterFPChance": "double",
        "partitioner": "java.lang.String"
    },
    "org.apache.cassandra.db.rows.Row$Merger": {
        "columnDataReducer": "org.apache.cassandra.db.rows.Row$Merger$ColumnDataReducer",
        "dataBuffer": "java.util.List",
        "clustering": "org.apache.cassandra.db.Clustering",
        "rows": "org.apache.cassandra.db.rows.Row[]",
        "columnDataIterators": "java.util.List"
    },
    "org.apache.cassandra.db.filter.DataLimits$CQLPagingLimits": {
        "lastReturnedKeyRemaining": "int",
        "lastReturnedKey": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator": {
        "next": "org.apache.cassandra.db.rows.Unfiltered",
        "grouper": "org.apache.cassandra.db.LegacyLayout$CellGrouper",
        "tombstoneTracker": "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator$TombstoneTracker",
        "atoms": "org.apache.cassandra.db.UnfilteredDeserializer$OldFormatDeserializer$UnfilteredIterator$AtomIterator"
    },
    "org.apache.cassandra.db.rows.CellPath$CollectionCellPath": {
        "value": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.rows.WrappingUnfilteredRowIterator": {
        "wrapped": "org.apache.cassandra.db.rows.UnfilteredRowIterator"
    },
    "org.apache.cassandra.schema.LegacySchemaMigrator$Type": {
        "metadata": "org.apache.cassandra.db.marshal.UserType",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.filter.RowFilter$ThriftFilter": {
        "expressions": "java.util.List"
    },
    "org.apache.cassandra.db.EmptyIterators$EmptyPartitionIterator": {
        "instance": "org.apache.cassandra.db.EmptyIterators$EmptyPartitionIterator"
    },
    "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$Reader": {
        "deserializer": "org.apache.cassandra.db.UnfilteredDeserializer",
        "openMarker": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.rows.ColumnData": {
        "column": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.db.lifecycle.LogReplica": {
        "file": "java.io.File"
    },
    "org.apache.cassandra.db.SerializationHeader": {
        "stats": "org.apache.cassandra.db.rows.EncodingStats",
        "columns": "org.apache.cassandra.db.PartitionColumns"
    },
    "org.apache.cassandra.io.sstable.SSTableIdentityIterator": {
        "iterator": "org.apache.cassandra.io.sstable.SSTableSimpleIterator",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime",
        "sstable": "org.apache.cassandra.io.sstable.format.SSTableReader",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.commitlog.CommitLogReplayer": {
        "futures": "java.util.List",
        "buffer": "byte[]"
    },
    "org.apache.cassandra.io.sstable.SSTableRewriter": {
        "writer": "org.apache.cassandra.io.sstable.format.SSTableWriter",
        "writers": "java.util.List",
        "preparedForCommit": "java.util.List"
    },
    "org.apache.cassandra.db.DeletionPurger": {
        "PURGE_ALL": "org.apache.cassandra.db.DeletionPurger"
    },
    "org.apache.cassandra.db.ReadResponse$LegacyRemoteDataResponse": {
        "partitions": "java.util.List"
    },
    "org.apache.cassandra.utils.ByteBufferUtil": {
        "EMPTY_BYTE_BUFFER": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.marshal.BytesType": {
        "instance": "org.apache.cassandra.db.marshal.BytesType"
    },
    "org.apache.cassandra.hints.Hint": {
        "gcgs": "int",
        "mutation": "org.apache.cassandra.db.Mutation",
        "creationTime": "long"
    },
    "org.apache.cassandra.db.LegacyLayout$LegacyUnfilteredPartition": {
        "rangeTombstones": "org.apache.cassandra.db.LegacyLayout$LegacyRangeTombstoneList",
        "partitionDeletion": "org.apache.cassandra.db.DeletionTime",
        "cells": "java.util.List"
    },
    "org.apache.cassandra.db.partitions.FilteredPartition": {
        "partitionKey": "org.apache.cassandra.db.DecoratedKey",
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.utils.MergeIterator$TrivialOneToOne": {
        "source": "java.util.Iterator"
    },
    "org.apache.cassandra.db.Slices": {
        "NONE": "org.apache.cassandra.db.Slices",
        "ALL": "org.apache.cassandra.db.Slices"
    },
    "org.apache.cassandra.repair.TreeResponse": {
        "trees": "org.apache.cassandra.utils.MerkleTrees"
    },
    "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder": {
        "deletionInfo": "org.apache.cassandra.db.DeletionInfo",
        "tree": "java.lang.Object[]",
        "stats": "org.apache.cassandra.db.rows.EncodingStats",
        "staticRow": "org.apache.cassandra.db.rows.Row",
        "columns": "org.apache.cassandra.db.PartitionColumns"
    },
    "org.apache.cassandra.utils.obs.OpenBitSet": {
        "bits": "long[][]",
        "wlen": "int"
    },
    "org.apache.cassandra.io.compress.CompressionMetadata$Chunk": {
        "offset": "long",
        "length": "int"
    },
    "org.apache.cassandra.utils.BloomCalculations": {
        "optKPerBuckets": "int[]"
    },
    "org.apache.cassandra.io.sstable.IndexSummaryBuilder$ReadableBoundary": {
        "lastKey": "org.apache.cassandra.db.DecoratedKey",
        "summaryCount": "int",
        "entriesLength": "long"
    },
    "org.apache.cassandra.db.Memtable": {
        "partitions": "java.util.concurrent.ConcurrentNavigableMap"
    },
    "org.apache.cassandra.db.partitions.PartitionIterators$SingletonPartitionIterator": {
        "iterator": "org.apache.cassandra.db.rows.RowIterator"
    },
    "org.apache.cassandra.db.compaction.Verifier": {
        "indexFile": "org.apache.cassandra.io.util.RandomAccessReader",
        "dataFile": "org.apache.cassandra.io.util.RandomAccessReader"
    },
    "org.apache.cassandra.io.sstable.IndexHelper$IndexInfo": {
        "width": "long",
        "lastName": "org.apache.cassandra.db.ClusteringPrefix",
        "firstName": "org.apache.cassandra.db.ClusteringPrefix",
        "endOpenMarker": "org.apache.cassandra.db.DeletionTime",
        "offset": "long"
    },
    "org.apache.cassandra.io.util.BufferedDataOutputStreamPlus": {
        "channel": "java.nio.channels.WritableByteChannel"
    },
    "org.apache.cassandra.db.ColumnFamilyStore$Flush": {
        "memtables": "java.util.List"
    },
    "org.apache.cassandra.db.DeletionInfo": {
        "LIVE": "org.apache.cassandra.db.DeletionInfo"
    },
    "org.apache.cassandra.db.columniterator.SSTableIterator$ForwardReader": {
        "next": "org.apache.cassandra.db.rows.Unfiltered",
        "start": "org.apache.cassandra.db.Slice$Bound",
        "deserializer": "org.apache.cassandra.db.UnfilteredDeserializer",
        "openMarker": "org.apache.cassandra.db.DeletionTime",
        "end": "org.apache.cassandra.db.Slice$Bound"
    },
    "org.apache.cassandra.db.view.ViewUpdateGenerator": {
        "currentViewEntryBuilder": "org.apache.cassandra.db.rows.Row$Builder",
        "view": "org.apache.cassandra.db.view.View",
        "viewMetadata": "org.apache.cassandra.config.CFMetaData",
        "baseDecoratedKey": "org.apache.cassandra.db.DecoratedKey",
        "currentViewEntryPartitionKey": "java.nio.ByteBuffer[]",
        "nowInSec": "int",
        "updates": "java.util.Map",
        "basePartitionKey": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.service.AbstractReadExecutor": {
        "traceState": "org.apache.cassandra.tracing.TraceState",
        "handler": "org.apache.cassandra.service.ReadCallback",
        "targetReplicas": "java.util.List",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.service.WriteResponseHandler": {
        "pendingEndpoints": "java.util.Collection"
    },
    "org.apache.cassandra.db.ColumnFamilyStore$ViewFragment": {
        "memtables": "java.lang.Iterable",
        "sstables": "java.util.List"
    },
    "org.apache.cassandra.transport.messages.ResultMessage$Rows": {
        "result": "org.apache.cassandra.cql3.ResultSet"
    },
    "org.apache.cassandra.db.filter.ColumnSubselection": {
        "column": "org.apache.cassandra.config.ColumnDefinition"
    },
    "org.apache.cassandra.utils.MergeIterator$Candidate": {
        "iter": "java.util.Iterator",
        "item": "java.lang.Object"
    },
    "org.apache.cassandra.db.filter.ColumnFilter": {
        "queried": "org.apache.cassandra.db.PartitionColumns",
        "fetched": "org.apache.cassandra.db.PartitionColumns"
    },
    "org.apache.cassandra.metrics.RestorableMeter$RestorableEWMA": {
        "rate": "double"
    },
    "org.apache.cassandra.db.columniterator.SSTableReversedIterator$ReverseIndexedReader": {
        "indexState": "org.apache.cassandra.db.columniterator.AbstractSSTableIterator$IndexState",
        "slice": "org.apache.cassandra.db.Slice"
    },
    "org.apache.cassandra.db.transform.UnfilteredRows": {
        "columns": "org.apache.cassandra.db.PartitionColumns",
        "partitionLevelDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.view.TableViews": {
        "baseTableMetadata": "org.apache.cassandra.config.CFMetaData",
        "views": "java.util.List"
    },
    "org.apache.cassandra.io.sstable.SSTableSimpleIterator$OldFormatIterator": {
        "deserializer": "org.apache.cassandra.db.UnfilteredDeserializer",
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.db.partitions.AtomicBTreePartition": {
        "EMPTY": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder",
        "ref": "org.apache.cassandra.db.partitions.AbstractBTreePartition$Holder"
    },
    "org.apache.cassandra.io.sstable.metadata.MetadataType": {
        "VALIDATION": "org.apache.cassandra.io.sstable.metadata.MetadataType",
        "HEADER": "org.apache.cassandra.io.sstable.metadata.MetadataType",
        "COMPACTION": "org.apache.cassandra.io.sstable.metadata.MetadataType",
        "STATS": "org.apache.cassandra.io.sstable.metadata.MetadataType"
    },
    "org.apache.cassandra.notifications.SSTableAddedNotification": {
        "added": "java.lang.Iterable"
    },
    "org.apache.cassandra.service.DatacenterWriteResponseHandler": {
        "pendingEndpoints": "java.util.Collection"
    },
    "org.apache.cassandra.hints.EncodedHintMessage": {
        "hint": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.lifecycle.LifecycleTransaction": {
        "tracker": "org.apache.cassandra.db.lifecycle.Tracker",
        "originals": "java.util.Set",
        "logged": "org.apache.cassandra.db.lifecycle.LifecycleTransaction$State",
        "log": "org.apache.cassandra.db.lifecycle.LogTransaction"
    },
    "org.apache.cassandra.db.rows.AbstractRangeTombstoneMarker": {
        "bound": "org.apache.cassandra.db.RangeTombstone$Bound"
    },
    "org.apache.cassandra.thrift.CassandraServer$ThriftCASRequest": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.compaction.AbstractCompactionStrategy": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.hints.CompressedHintsWriter": {
        "compressionBuffer": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.utils.btree.BTreeSet$Builder": {
        "builder": "org.apache.cassandra.utils.btree.BTree$Builder"
    },
    "org.apache.cassandra.cache.AutoSavingCache$Writer": {
        "keyIterator": "java.util.Iterator"
    },
    "org.apache.cassandra.service.pager.MultiPartitionPager": {
        "pagers": "org.apache.cassandra.service.pager.SinglePartitionPager[]"
    },
    "org.apache.cassandra.cache.KeyCacheKey": {
        "ksAndCFName": "org.apache.cassandra.utils.Pair",
        "key": "byte[]",
        "desc": "org.apache.cassandra.io.sstable.Descriptor"
    },
    "org.apache.cassandra.io.sstable.SSTable": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "first": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.service.pager.PartitionRangeQueryPager": {
        "command": "org.apache.cassandra.db.ReadCommand",
        "lastReturnedKey": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.partitions.CachedBTreePartition": {
        "nonExpiringLiveCells": "int",
        "cachedLiveRows": "int",
        "rowsWithNonExpiringCells": "int",
        "nonTombstoneCellCount": "int",
        "createdAtInSec": "int"
    },
    "org.apache.cassandra.db.PartitionPosition$Kind": {
        "MAX_BOUND": "org.apache.cassandra.db.PartitionPosition$Kind",
        "MIN_BOUND": "org.apache.cassandra.db.PartitionPosition$Kind",
        "ROW_KEY": "org.apache.cassandra.db.PartitionPosition$Kind"
    },
    "org.apache.cassandra.db.filter.RowFilter$ThriftExpression": {
        "value": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.rows.EncodingStats$Collector": {
        "minDeletionTime": "int",
        "minTTL": "int",
        "minTimestamp": "long"
    },
    "org.apache.cassandra.db.MutableDeletionInfo": {
        "ranges": "org.apache.cassandra.db.RangeTombstoneList",
        "partitionDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.config.ColumnDefinition": {
        "name": "org.apache.cassandra.cql3.ColumnIdentifier",
        "position": "int",
        "type": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.rows.ComplexColumnData$Builder": {
        "builder": "org.apache.cassandra.utils.btree.BTree$Builder",
        "column": "org.apache.cassandra.config.ColumnDefinition",
        "complexDeletion": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.utils.memory.MemtableAllocator": {
        "onHeap": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator",
        "offHeap": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator"
    },
    "org.apache.cassandra.utils.MerkleTree$Hashable": {
        "hash": "byte[]"
    },
    "org.apache.cassandra.cache.AutoSavingCache": {
        "cacheType": "org.apache.cassandra.service.CacheService$CacheType"
    },
    "org.apache.cassandra.db.RowIndexEntry": {
        "position": "long"
    },
    "org.apache.cassandra.dht.Bounds": {
        "left": "org.apache.cassandra.dht.RingPosition",
        "right": "org.apache.cassandra.dht.RingPosition"
    },
    "org.apache.cassandra.io.sstable.SSTableSimpleIterator": {
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.utils.StreamingHistogram": {
        "maxBinSize": "int"
    },
    "org.apache.cassandra.io.compress.CompressionMetadata$Writer": {
        "count": "int",
        "parameters": "org.apache.cassandra.schema.CompressionParams",
        "offsets": "org.apache.cassandra.io.util.SafeMemory",
        "dataLength": "long"
    },
    "org.apache.cassandra.utils.btree.BTree": {
        "EMPTY_BRANCH": "java.lang.Object[]",
        "EMPTY_LEAF": "java.lang.Object[]"
    },
    "org.apache.cassandra.db.marshal.MapType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "keys": "org.apache.cassandra.db.marshal.AbstractType",
        "values": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.utils.ExpiringMap": {
        "cache": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.db.ColumnIndex": {
        "EMPTY": "org.apache.cassandra.db.ColumnIndex",
        "columnsIndex": "java.util.List",
        "partitionHeaderLength": "long"
    },
    "org.apache.cassandra.utils.btree.BTree$Builder": {
        "count": "int",
        "values": "java.lang.Object[]"
    },
    "org.apache.cassandra.utils.obs.OffHeapBitSet": {
        "bytes": "org.apache.cassandra.io.util.Memory"
    },
    "org.apache.cassandra.db.Truncation": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String"
    },
    "org.apache.cassandra.io.sstable.format.SSTableWriter": {
        "metadataCollector": "org.apache.cassandra.io.sstable.metadata.MetadataCollector",
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "txnProxy": "org.apache.cassandra.io.sstable.format.SSTableWriter$TransactionalProxy",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "header": "org.apache.cassandra.db.SerializationHeader",
        "first": "org.apache.cassandra.db.DecoratedKey"
    }
}
