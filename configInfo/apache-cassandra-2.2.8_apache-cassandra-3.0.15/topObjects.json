["org.apache.cassandra.repair.ValidationTask","org.apache.cassandra.db.ColumnFamilyStore$Flush","org.apache.cassandra.service.ActiveRepairService$1","org.apache.cassandra.exceptions.TruncateException","org.apache.cassandra.db.ArrayBackedSortedColumns","org.apache.cassandra.db.compaction.CompactionManager$12","org.apache.cassandra.cql3.statements.ParsedStatement$Prepared","org.apache.cassandra.repair.StreamingRepairTask","org.apache.cassandra.db.composites.AbstractCompoundCellNameType$CompositeDeserializer","org.apache.cassandra.io.sstable.format.SSTableReader","org.apache.cassandra.db.compaction.CompactionManager$11","org.apache.cassandra.net.MessagingService$5$1","org.apache.cassandra.transport.messages.ResultMessage$Rows","org.apache.cassandra.db.AtomicBTreeColumns$3","org.apache.cassandra.db.HintedHandOffManager$5","org.apache.cassandra.streaming.StreamEvent$SessionCompleteEvent","org.apache.cassandra.cql3.UntypedResultSet$Row","org.apache.cassandra.utils.BloomCalculations$BloomSpecification","org.apache.cassandra.db.Mutation","org.apache.cassandra.cql3.restrictions.SingleColumnRestriction$Slice","org.apache.cassandra.db.compaction.Scrubber","org.apache.cassandra.repair.AnticompactionTask","org.apache.cassandra.io.util.SequentialWriter$BufferedFileWriterMark","org.apache.cassandra.io.sstable.format.big.SSTableSliceIterator","org.apache.cassandra.io.sstable.format.big.IndexedSliceReader$IndexedBlockFetcher","org.apache.cassandra.gms.Gossiper$GossipTask","org.apache.cassandra.config.CFMetaData","org.apache.cassandra.repair.Validator","org.apache.cassandra.notifications.SSTableAddedNotification","org.apache.cassandra.utils.WrappedRunnable","org.apache.cassandra.io.sstable.format.SSTableReader$GlobalTidy$1","org.apache.cassandra.db.compaction.writers.MajorLeveledCompactionWriter","org.apache.cassandra.service.StorageProxy$LocalMutationRunnable","org.apache.cassandra.db.ColumnIndex$Builder","org.apache.cassandra.db.compaction.LazilyCompactedRow","org.apache.cassandra.concurrent.AbstractLocalAwareExecutorService$FutureTask","org.apache.cassandra.service.paxos.PaxosState","org.apache.cassandra.db.CFRowAdder","org.apache.cassandra.cql3.ResultSet$ResultMetadata","org.apache.cassandra.db.compaction.writers.MaxSSTableSizeWriter","org.apache.cassandra.db.commitlog.ReplayPosition","org.apache.cassandra.streaming.messages.FileMessageHeader","org.apache.cassandra.service.StorageProxy$HintRunnable","org.apache.cassandra.net.MessageDeliveryTask","org.apache.cassandra.db.compaction.writers.DefaultCompactionWriter","org.apache.cassandra.db.ColumnFamilyStore$11","org.apache.cassandra.db.ColumnFamilyStore$13","org.apache.cassandra.utils.concurrent.Ref$1","org.apache.cassandra.db.commitlog.MemoryMappedSegment","org.apache.cassandra.transport.messages.ResultMessage$Void","org.apache.cassandra.locator.TokenMetadata","org.apache.cassandra.cql3.selection.Selection$ResultSetBuilder","org.apache.cassandra.db.compaction.writers.SplittingSizeTieredCompactionWriter","org.apache.cassandra.db.PagedRangeCommand","org.apache.cassandra.exceptions.InvalidRequestException","org.apache.cassandra.db.CollationController$1","org.apache.cassandra.io.sstable.SSTableRewriter","org.apache.cassandra.io.compress.CompressedSequentialWriter","org.apache.cassandra.db.commitlog.CommitLogReplayer","org.apache.cassandra.streaming.StreamCoordinator$StreamSessionConnector","org.apache.cassandra.db.RowIndexEntry","org.apache.cassandra.db.AtomDeserializer","org.apache.cassandra.io.compress.CompressionMetadata$Writer","org.apache.cassandra.streaming.StreamWriter","org.apache.cassandra.cql3.BatchQueryOptions$WithPerStatementVariables","org.apache.cassandra.cache.AutoSavingCache$2","org.apache.cassandra.transport.messages.ReadyMessage","org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter$1","org.apache.cassandra.streaming.StreamPlan","org.apache.cassandra.db.compaction.LeveledCompactionTask","org.apache.cassandra.db.compaction.Verifier","org.apache.cassandra.io.util.BufferedPoolingSegmentedFile","org.apache.cassandra.gms.GossipDigest","org.apache.cassandra.streaming.messages.StreamInitMessage"]