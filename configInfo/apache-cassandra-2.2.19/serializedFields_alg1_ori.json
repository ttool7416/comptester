{
    "org.apache.cassandra.io.compress.CompressionMetadata": {
        "parameters": "org.apache.cassandra.io.compress.CompressionParameters",
        "chunkOffsets": "org.apache.cassandra.io.util.Memory",
        "compressedFileLength": "long",
        "dataLength": "long"
    },
    "org.apache.cassandra.cache.CounterCacheKey": {
        "partitionKey": "byte[]",
        "cellName": "byte[]"
    },
    "org.apache.cassandra.db.IndexExpression": {
        "column": "java.nio.ByteBuffer",
        "value": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.config.Schema": {
        "instance": "org.apache.cassandra.config.Schema",
        "keyspaces": "java.util.Map",
        "keyspaceInstances": "java.util.Map",
        "version": "java.util.UUID"
    },
    "org.apache.cassandra.db.BufferCounterCell": {
        "timestampOfLastDelete": "long",
        "timestamp": "long",
        "value": "java.nio.ByteBuffer",
        "name": "org.apache.cassandra.db.composites.CellName"
    },
    "org.apache.cassandra.utils.btree.Path": {
        "path": "java.lang.Object[][]",
        "indexes": "byte[]"
    },
    "org.apache.cassandra.db.RangeTombstoneList": {
        "size": "int",
        "ends": "org.apache.cassandra.db.composites.Composite[]",
        "markedAts": "long[]",
        "delTimes": "int[]",
        "starts": "org.apache.cassandra.db.composites.Composite[]"
    },
    "org.apache.cassandra.utils.Pair": {
        "right": "java.lang.Object",
        "left": "java.lang.Object"
    },
    "org.apache.cassandra.db.Mutation": {
        "keyspaceName": "java.lang.String",
        "key": "java.nio.ByteBuffer",
        "modifications": "java.util.Map"
    },
    "org.apache.cassandra.utils.BloomCalculations$BloomSpecification": {
        "K": "int"
    },
    "org.apache.cassandra.utils.BloomFilter": {
        "hashCount": "int"
    },
    "org.apache.cassandra.db.ColumnFamily": {
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.db.SnapshotCommand": {
        "snapshot_name": "java.lang.String",
        "keyspace": "java.lang.String",
        "column_family": "java.lang.String",
        "clear_snapshot": "boolean"
    },
    "org.apache.cassandra.db.Keyspace": {
        "columnFamilyStores": "java.util.concurrent.ConcurrentMap",
        "replicationStrategy": "org.apache.cassandra.locator.AbstractReplicationStrategy",
        "metric": "org.apache.cassandra.metrics.KeyspaceMetrics",
        "metadata": "org.apache.cassandra.config.KSMetaData"
    },
    "org.apache.cassandra.db.ArrayBackedSortedColumns$2": {
        "iter": "java.util.Iterator"
    },
    "org.apache.cassandra.db.BufferDecoratedKey": {
        "key": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.composites.SimpleSparseCellName": {
        "columnName": "org.apache.cassandra.cql3.ColumnIdentifier"
    },
    "org.apache.cassandra.io.sstable.metadata.ValidationMetadata": {
        "partitioner": "java.lang.String",
        "bloomFilterFPChance": "double"
    },
    "org.apache.cassandra.service.pager.PagingState": {
        "partitionKey": "java.nio.ByteBuffer",
        "cellName": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.RowIndexEntry$IndexedEntry": {
        "columnsIndex": "java.util.List",
        "deletionTime": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.ReadCommand$Type": {
        "serializedValue": "byte",
        "GET_BY_NAMES": "org.apache.cassandra.db.ReadCommand$Type",
        "GET_SLICES": "org.apache.cassandra.db.ReadCommand$Type"
    },
    "org.apache.cassandra.db.compaction.writers.DefaultCompactionWriter": {
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "estimatedTotalKeys": "long"
    },
    "org.apache.cassandra.db.ReadCommand": {
        "commandType": "org.apache.cassandra.db.ReadCommand$Type",
        "isDigestQuery": "boolean",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.RangeSliceCommand": {
        "keyRange": "org.apache.cassandra.dht.AbstractBounds",
        "predicate": "org.apache.cassandra.db.filter.IDiskAtomFilter",
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "isPaging": "boolean",
        "maxResults": "int",
        "countCQL3Rows": "boolean",
        "rowFilter": "java.util.List",
        "timestamp": "long"
    },
    "org.apache.cassandra.streaming.StreamSummary": {
        "totalSize": "long",
        "files": "int"
    },
    "org.apache.cassandra.utils.EstimatedHistogram": {
        "bucketOffsets": "long[]"
    },
    "org.apache.cassandra.db.BufferExpiringCell": {
        "timeToLive": "int",
        "localExpirationTime": "int",
        "timestamp": "long",
        "name": "org.apache.cassandra.db.composites.CellName"
    },
    "org.apache.cassandra.db.compaction.AbstractCompactedRow": {
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.dht.AbstractBounds": {
        "left": "org.apache.cassandra.dht.RingPosition",
        "right": "org.apache.cassandra.dht.RingPosition"
    },
    "org.apache.cassandra.utils.MerkleTree": {
        "hashdepth": "byte"
    },
    "org.apache.cassandra.io.sstable.Descriptor": {
        "generation": "int",
        "cfname": "java.lang.String",
        "ksname": "java.lang.String"
    },
    "org.apache.cassandra.db.index.SecondaryIndexManager": {
        "indexesByName": "java.util.Map",
        "allIndexes": "java.util.Collection",
        "nullUpdater": "org.apache.cassandra.db.index.SecondaryIndexManager$Updater",
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "indexesByColumn": "java.util.concurrent.ConcurrentNavigableMap",
        "rowLevelIndexMap": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.db.filter.NamesQueryFilter": {
        "columns": "java.util.SortedSet",
        "countCQL3Rows": "boolean"
    },
    "org.apache.cassandra.streaming.StreamRequest": {
        "keyspace": "java.lang.String",
        "ranges": "java.util.Collection",
        "repairedAt": "long",
        "columnFamilies": "java.util.Collection"
    },
    "org.apache.cassandra.db.PagedRangeCommand": {
        "keyRange": "org.apache.cassandra.dht.AbstractBounds",
        "predicate": "org.apache.cassandra.db.filter.IDiskAtomFilter",
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "stop": "org.apache.cassandra.db.composites.Composite",
        "limit": "int",
        "start": "org.apache.cassandra.db.composites.Composite",
        "countCQL3Rows": "boolean",
        "rowFilter": "java.util.List",
        "timestamp": "long"
    },
    "org.apache.cassandra.config.KSMetaData": {
        "cfMetaData": "java.util.Map",
        "durableWrites": "boolean",
        "userTypes": "org.apache.cassandra.config.UTMetaData",
        "name": "java.lang.String"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableWriter": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "lastWrittenKey": "org.apache.cassandra.db.DecoratedKey",
        "iwriter": "org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter",
        "first": "org.apache.cassandra.db.DecoratedKey",
        "metadataCollector": "org.apache.cassandra.io.sstable.metadata.MetadataCollector",
        "components": "java.util.Set"
    },
    "org.apache.cassandra.io.sstable.SSTableRewriter": {
        "writer": "org.apache.cassandra.io.sstable.format.SSTableWriter",
        "cachedKeys": "java.util.Map",
        "preparedForCommit": "java.util.List",
        "writers": "java.util.List"
    },
    "org.apache.cassandra.db.commitlog.CommitLogReplayer": {
        "buffer": "byte[]",
        "futures": "java.util.List",
        "keyspacesRecovered": "java.util.Set",
        "invalidMutations": "java.util.Map"
    },
    "org.apache.cassandra.utils.ByteBufferUtil": {
        "EMPTY_BYTE_BUFFER": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.dht.AbstractBounds$Type": {
        "BOUNDS": "org.apache.cassandra.dht.AbstractBounds$Type",
        "RANGE": "org.apache.cassandra.dht.AbstractBounds$Type"
    },
    "org.apache.cassandra.streaming.StreamWriter": {
        "transferBuffer": "byte[]",
        "session": "org.apache.cassandra.streaming.StreamSession",
        "sections": "java.util.Collection"
    },
    "org.apache.cassandra.streaming.compress.CompressionInfo": {
        "chunks": "org.apache.cassandra.io.compress.CompressionMetadata$Chunk[]",
        "parameters": "org.apache.cassandra.io.compress.CompressionParameters"
    },
    "org.apache.cassandra.db.BufferCell": {
        "name": "org.apache.cassandra.db.composites.CellName",
        "value": "java.nio.ByteBuffer",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.composites.SimpleComposite": {
        "element": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.composites.BoundedComposite": {
        "wrapped": "org.apache.cassandra.db.composites.Composite"
    },
    "org.apache.cassandra.io.compress.CompressionMetadata$Chunk": {
        "offset": "long",
        "length": "int",
        "serializer": "org.apache.cassandra.io.IVersionedSerializer"
    },
    "org.apache.cassandra.utils.BloomCalculations": {
        "optKPerBuckets": "int[]"
    },
    "org.apache.cassandra.db.Memtable": {
        "rows": "java.util.concurrent.ConcurrentNavigableMap"
    },
    "org.apache.cassandra.io.sstable.IndexSummary": {
        "entries": "org.apache.cassandra.io.util.Memory",
        "minIndexInterval": "int",
        "entriesLength": "long",
        "samplingLevel": "int",
        "sizeAtFullSampling": "int",
        "offsetCount": "int"
    },
    "org.apache.cassandra.repair.RepairJobDesc": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "range": "org.apache.cassandra.dht.Range"
    },
    "org.apache.cassandra.db.RowPosition$Kind": {
        "MIN_BOUND": "org.apache.cassandra.db.RowPosition$Kind",
        "MAX_BOUND": "org.apache.cassandra.db.RowPosition$Kind",
        "ROW_KEY": "org.apache.cassandra.db.RowPosition$Kind"
    },
    "org.apache.cassandra.io.sstable.IndexHelper$IndexInfo": {
        "lastName": "org.apache.cassandra.db.composites.Composite",
        "firstName": "org.apache.cassandra.db.composites.Composite",
        "offset": "long",
        "width": "long"
    },
    "org.apache.cassandra.db.CounterMutation": {
        "mutation": "org.apache.cassandra.db.Mutation"
    },
    "org.apache.cassandra.db.ColumnFamilyStore$Flush": {
        "memtables": "java.util.List"
    },
    "org.apache.cassandra.db.index.AbstractSimplePerColumnSecondaryIndex": {
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "indexCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "columnDef": "org.apache.cassandra.config.ColumnDefinition",
        "columnDefs": "java.util.Set"
    },
    "org.apache.cassandra.service.RowDigestResolver": {
        "replies": "org.apache.cassandra.utils.concurrent.Accumulator",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.DeletionInfo": {
        "ranges": "org.apache.cassandra.db.RangeTombstoneList",
        "topLevel": "org.apache.cassandra.db.DeletionTime"
    },
    "org.apache.cassandra.db.ArrayBackedSortedColumns": {
        "deletionInfo": "org.apache.cassandra.db.DeletionInfo",
        "cells": "org.apache.cassandra.db.Cell[]",
        "size": "int",
        "EMPTY_ARRAY": "org.apache.cassandra.db.Cell[]",
        "sortedSize": "int"
    },
    "org.apache.cassandra.service.AbstractReadExecutor": {
        "handler": "org.apache.cassandra.service.ReadCallback",
        "resolver": "org.apache.cassandra.service.RowDigestResolver",
        "traceState": "org.apache.cassandra.tracing.TraceState",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.serializers.BooleanSerializer": {
        "TRUE": "java.nio.ByteBuffer",
        "FALSE": "java.nio.ByteBuffer",
        "instance": "org.apache.cassandra.serializers.BooleanSerializer"
    },
    "org.apache.cassandra.io.sstable.format.SSTableReader": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "last": "org.apache.cassandra.db.DecoratedKey",
        "indexSummary": "org.apache.cassandra.io.sstable.IndexSummary",
        "first": "org.apache.cassandra.db.DecoratedKey",
        "dfile": "org.apache.cassandra.io.util.SegmentedFile",
        "sstableMetadata": "org.apache.cassandra.io.sstable.metadata.StatsMetadata",
        "bloomFilterTracker": "org.apache.cassandra.io.sstable.BloomFilterTracker",
        "ifile": "org.apache.cassandra.io.util.SegmentedFile",
        "selfRef": "org.apache.cassandra.utils.concurrent.Ref",
        "descriptor": "org.apache.cassandra.io.sstable.Descriptor",
        "readMeter": "org.apache.cassandra.metrics.RestorableMeter",
        "components": "java.util.Set",
        "tidy": "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier"
    },
    "org.apache.cassandra.streaming.StreamReader": {
        "estimatedKeys": "long",
        "session": "org.apache.cassandra.streaming.StreamSession",
        "sections": "java.util.Collection"
    },
    "org.apache.cassandra.db.filter.ColumnSlice": {
        "start": "org.apache.cassandra.db.composites.Composite",
        "finish": "org.apache.cassandra.db.composites.Composite",
        "ALL_COLUMNS_ARRAY": "org.apache.cassandra.db.filter.ColumnSlice[]",
        "ALL_COLUMNS": "org.apache.cassandra.db.filter.ColumnSlice"
    },
    "org.apache.cassandra.db.RangeTombstone$Tracker": {
        "unwrittenTombstones": "java.util.Set",
        "openedTombstones": "java.util.List"
    },
    "org.apache.cassandra.db.Row": {
        "cf": "org.apache.cassandra.db.ColumnFamily",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.utils.MerkleTree$Leaf": {
        "hash": "byte[]"
    },
    "org.apache.cassandra.db.filter.QueryFilter$2": {
        "next": "org.apache.cassandra.db.Cell"
    },
    "org.apache.cassandra.db.AtomicBTreeColumns$Holder": {
        "deletionInfo": "org.apache.cassandra.db.DeletionInfo",
        "tree": "java.lang.Object[]"
    },
    "org.apache.cassandra.service.ReadCallback": {
        "resolver": "org.apache.cassandra.service.IResponseResolver",
        "endpoints": "java.util.List"
    },
    "org.apache.cassandra.utils.MerkleTree$Inner": {
        "hash": "byte[]"
    },
    "org.apache.cassandra.config.CFMetaData": {
        "cfId": "java.util.UUID",
        "ksName": "java.lang.String",
        "minIndexInterval": "int",
        "ksAndCFBytes": "byte[]",
        "cfName": "java.lang.String",
        "columnMetadata": "java.util.Map",
        "caching": "org.apache.cassandra.cache.CachingOptions",
        "DEFAULT_CACHING_STRATEGY": "org.apache.cassandra.cache.CachingOptions",
        "triggers": "java.util.Map",
        "isDense": "java.lang.Boolean",
        "droppedColumns": "java.util.Map",
        "speculativeRetry": "org.apache.cassandra.config.CFMetaData$SpeculativeRetry",
        "readRepairChance": "double",
        "minCompactionThreshold": "int",
        "memtableFlushPeriod": "int",
        "maxIndexInterval": "int",
        "maxCompactionThreshold": "int",
        "dcLocalReadRepairChance": "double",
        "keyValidator": "org.apache.cassandra.db.marshal.AbstractType",
        "gcGraceSeconds": "int",
        "defaultValidator": "org.apache.cassandra.db.marshal.AbstractType",
        "defaultTimeToLive": "int",
        "comment": "java.lang.String",
        "bloomFilterFpChance": "java.lang.Double",
        "cfType": "org.apache.cassandra.db.ColumnFamilyType",
        "DEFAULT_SPECULATIVE_RETRY": "org.apache.cassandra.config.CFMetaData$SpeculativeRetry",
        "clusteringColumns": "java.util.List",
        "regularColumns": "java.util.SortedSet",
        "staticColumns": "java.util.SortedSet"
    },
    "org.apache.cassandra.io.sstable.metadata.MetadataType": {
        "COMPACTION": "org.apache.cassandra.io.sstable.metadata.MetadataType",
        "STATS": "org.apache.cassandra.io.sstable.metadata.MetadataType",
        "VALIDATION": "org.apache.cassandra.io.sstable.metadata.MetadataType"
    },
    "org.apache.cassandra.cache.RowCacheKey": {
        "key": "byte[]",
        "ksAndCFName": "org.apache.cassandra.utils.Pair"
    },
    "org.apache.cassandra.utils.IntervalTree": {
        "count": "int",
        "head": "org.apache.cassandra.utils.IntervalTree$IntervalNode"
    },
    "org.apache.cassandra.db.compaction.writers.MajorLeveledCompactionWriter": {
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "averageEstimatedKeysPerSSTable": "long",
        "sstablesWritten": "int",
        "partitionsWritten": "long",
        "estimatedTotalKeys": "long",
        "allSSTables": "java.util.Set"
    },
    "org.apache.cassandra.db.TruncateResponse": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String",
        "success": "boolean"
    },
    "org.apache.cassandra.io.util.Memory": {
        "size": "long"
    },
    "org.apache.cassandra.db.ColumnFamilyStore": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "indexManager": "org.apache.cassandra.db.index.SecondaryIndexManager",
        "keyspace": "org.apache.cassandra.db.Keyspace",
        "CANONICAL_SSTABLES": "com.google.common.base.Function",
        "compactionStrategyWrapper": "org.apache.cassandra.db.compaction.WrappingCompactionStrategy",
        "maxCompactionThreshold": "org.apache.cassandra.utils.DefaultInteger",
        "data": "org.apache.cassandra.db.lifecycle.Tracker",
        "directories": "org.apache.cassandra.db.Directories",
        "name": "java.lang.String",
        "metric": "org.apache.cassandra.metrics.ColumnFamilyMetrics"
    },
    "org.apache.cassandra.db.RangeTombstone": {
        "min": "java.lang.Object",
        "data": "java.lang.Object",
        "max": "java.lang.Object"
    },
    "org.apache.cassandra.io.sstable.metadata.CompactionMetadata": {
        "ancestors": "java.util.Set"
    },
    "org.apache.cassandra.io.sstable.metadata.StatsMetadata": {
        "estimatedRowSize": "org.apache.cassandra.utils.EstimatedHistogram",
        "maxTimestamp": "long",
        "maxColumnNames": "java.util.List",
        "commitLogUpperBound": "org.apache.cassandra.db.commitlog.ReplayPosition",
        "estimatedColumnCount": "org.apache.cassandra.utils.EstimatedHistogram",
        "repairedAt": "long",
        "maxLocalDeletionTime": "int",
        "minColumnNames": "java.util.List",
        "compressionRatio": "double",
        "estimatedTombstoneDropTime": "org.apache.cassandra.utils.StreamingHistogram",
        "commitLogLowerBound": "org.apache.cassandra.db.commitlog.ReplayPosition",
        "hasLegacyCounterShards": "boolean",
        "sstableLevel": "int",
        "minTimestamp": "long"
    },
    "org.apache.cassandra.db.compaction.writers.MaxSSTableSizeWriter": {
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "estimatedSSTables": "long",
        "estimatedTotalKeys": "long",
        "allSSTables": "java.util.Set"
    },
    "org.apache.cassandra.db.commitlog.ReplayPosition": {
        "segment": "long",
        "position": "int"
    },
    "org.apache.cassandra.cache.AutoSavingCache$Writer": {
        "keyIterator": "java.util.Iterator"
    },
    "org.apache.cassandra.db.filter.SliceQueryFilter": {
        "slices": "org.apache.cassandra.db.filter.ColumnSlice[]",
        "compositesToGroup": "int",
        "count": "int",
        "reversed": "boolean",
        "columnCounter": "org.apache.cassandra.db.filter.ColumnCounter"
    },
    "org.apache.cassandra.cache.KeyCacheKey": {
        "key": "byte[]",
        "desc": "org.apache.cassandra.io.sstable.Descriptor",
        "ksAndCFName": "org.apache.cassandra.utils.Pair"
    },
    "org.apache.cassandra.db.SliceFromReadCommand": {
        "filter": "org.apache.cassandra.db.filter.SliceQueryFilter",
        "ksName": "java.lang.String",
        "cfName": "java.lang.String",
        "key": "java.nio.ByteBuffer",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.RangeSliceReply": {
        "rows": "java.util.List"
    },
    "org.apache.cassandra.db.SliceByNamesReadCommand": {
        "filter": "org.apache.cassandra.db.filter.NamesQueryFilter",
        "ksName": "java.lang.String",
        "cfName": "java.lang.String",
        "key": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.io.compress.CompressionParameters": {
        "otherOptions": "java.util.Map",
        "chunkLength": "java.lang.Integer",
        "serializer": "org.apache.cassandra.io.IVersionedSerializer"
    },
    "org.apache.cassandra.db.AtomicBTreeColumns": {
        "ref": "org.apache.cassandra.db.AtomicBTreeColumns$Holder",
        "EMPTY": "org.apache.cassandra.db.AtomicBTreeColumns$Holder",
        "metadata": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.db.compaction.writers.SplittingSizeTieredCompactionWriter": {
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter",
        "estimatedTotalKeys": "long",
        "ratios": "double[]",
        "allSSTables": "java.util.Set"
    },
    "org.apache.cassandra.db.Memtable$1": {
        "iter": "java.util.Iterator",
        "currentEntry": "java.util.Map$Entry"
    },
    "org.apache.cassandra.utils.btree.Cursor": {
        "endIndex": "byte"
    },
    "org.apache.cassandra.db.RowIndexEntry": {
        "position": "long"
    },
    "org.apache.cassandra.cache.AutoSavingCache": {
        "cacheType": "org.apache.cassandra.service.CacheService$CacheType"
    },
    "org.apache.cassandra.utils.StreamingHistogram": {
        "maxBinSize": "int",
        "bin": "java.util.TreeMap"
    },
    "org.apache.cassandra.io.compress.CompressionMetadata$Writer": {
        "dataLength": "long",
        "count": "int",
        "parameters": "org.apache.cassandra.io.compress.CompressionParameters"
    },
    "org.apache.cassandra.utils.Interval": {
        "min": "java.lang.Object",
        "data": "java.lang.Object",
        "max": "java.lang.Object"
    },
    "org.apache.cassandra.db.ColumnIndex": {
        "columnsIndex": "java.util.List",
        "EMPTY": "org.apache.cassandra.db.ColumnIndex"
    },
    "org.apache.cassandra.db.Truncation": {
        "keyspace": "java.lang.String",
        "columnFamily": "java.lang.String"
    },
    "org.apache.cassandra.db.context.CounterContext$ContextState": {
        "context": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.BufferCounterUpdateCell": {
        "name": "org.apache.cassandra.db.composites.CellName",
        "value": "java.nio.ByteBuffer",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.BufferDeletedCell": {
        "name": "org.apache.cassandra.db.composites.CellName",
        "value": "java.nio.ByteBuffer",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.composites.SimpleSparseCellNameType": {
        "internedNames": "java.util.Map"
    },
    "org.apache.cassandra.db.SuperColumns$SCIterator": {
        "subColumnsIterator": "java.util.Iterator",
        "type": "org.apache.cassandra.db.composites.CellNameType",
        "scName": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.config.ColumnDefinition": {
        "componentIndex": "java.lang.Integer",
        "indexType": "org.apache.cassandra.config.IndexType",
        "indexName": "java.lang.String",
        "name": "org.apache.cassandra.cql3.ColumnIdentifier",
        "type": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.CFRowAdder": {
        "cf": "org.apache.cassandra.db.ColumnFamily",
        "prefix": "org.apache.cassandra.db.composites.Composite",
        "ttl": "int",
        "ldt": "int",
        "timestamp": "long"
    },
    "org.apache.cassandra.db.composites.CompoundSparseCellName$WithCollection": {
        "collectionElement": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.db.composites.CompoundSparseCellName": {
        "elements": "java.nio.ByteBuffer[]",
        "columnName": "org.apache.cassandra.cql3.ColumnIdentifier"
    },
    "org.apache.cassandra.db.composites.CompoundComposite": {
        "elements": "java.nio.ByteBuffer[]"
    },
    "org.apache.cassandra.utils.FBUtilities": {
        "localInetAddress": "java.net.InetAddress",
        "broadcastInetAddress": "java.net.InetAddress"
    },
    "org.apache.cassandra.config.DatabaseDescriptor": {
        "listenAddress": "java.net.InetAddress",
        "rpcAddress": "java.net.InetAddress",
        "snitch": "org.apache.cassandra.locator.IEndpointSnitch",
        "conf": "org.apache.cassandra.config.Config",
        "broadcastAddress": "java.net.InetAddress"
    },
    "org.apache.cassandra.db.composites.CompoundSparseCellNameType": {
        "staticPrefix": "org.apache.cassandra.db.composites.Composite",
        "rowMarkerNoPrefix": "org.apache.cassandra.db.composites.CellName",
        "clusteringType": "org.apache.cassandra.db.composites.CompoundCType"
    },
    "org.apache.cassandra.tracing.TraceKeyspace": {
        "Events": "org.apache.cassandra.config.CFMetaData",
        "Sessions": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.tracing.TraceState": {
        "traceType": "org.apache.cassandra.tracing.Tracing$TraceType",
        "listeners": "java.util.List",
        "sessionIdBytes": "java.nio.ByteBuffer",
        "ttl": "int"
    },
    "org.apache.cassandra.db.index.composites.CompositesIndex": {
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "indexComparator": "org.apache.cassandra.db.composites.CellNameType",
        "columnDef": "org.apache.cassandra.config.ColumnDefinition",
        "columnDefs": "java.util.Set"
    },
    "org.apache.cassandra.db.index.SecondaryIndexManager$StandardUpdater": {
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.AtomicBTreeColumns$ColumnUpdater": {
        "metadata": "org.apache.cassandra.config.CFMetaData",
        "inserted": "java.util.List",
        "reclaimer": "org.apache.cassandra.utils.memory.MemtableAllocator$DataReclaimer",
        "indexer": "org.apache.cassandra.db.index.SecondaryIndexManager$Updater"
    },
    "org.apache.cassandra.utils.btree.BTree": {
        "EMPTY_LEAF": "java.lang.Object[]"
    },
    "org.apache.cassandra.db.lifecycle.View": {
        "premature": "java.util.Set",
        "compacting": "java.util.Set",
        "sstablesMap": "java.util.Map",
        "liveMemtables": "java.util.List",
        "sstables": "java.util.Set",
        "intervalTree": "org.apache.cassandra.db.lifecycle.SSTableIntervalTree"
    },
    "org.apache.cassandra.db.index.SecondaryIndexManager$GCUpdater": {
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.service.RowDataResolver": {
        "replies": "org.apache.cassandra.utils.concurrent.Accumulator",
        "repairResults": "java.util.List",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.service.AbstractReadExecutor$SpeculatingReadExecutor": {
        "traceState": "org.apache.cassandra.tracing.TraceState",
        "resolver": "org.apache.cassandra.service.RowDigestResolver",
        "targetReplicas": "java.util.List",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.service.pager.Pageable$ReadCommands": {
        "commands": "java.util.List"
    },
    "org.apache.cassandra.service.pager.NamesQueryPager": {
        "command": "org.apache.cassandra.db.SliceByNamesReadCommand"
    },
    "org.apache.cassandra.db.filter.QueryFilter": {
        "filter": "org.apache.cassandra.db.filter.IDiskAtomFilter",
        "key": "org.apache.cassandra.db.DecoratedKey"
    },
    "org.apache.cassandra.db.CollationController": {
        "filter": "org.apache.cassandra.db.filter.QueryFilter",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.db.ColumnFamilyStore$ViewFragment": {
        "memtables": "java.lang.Iterable",
        "sstables": "java.util.List"
    },
    "org.apache.cassandra.cache.CachingOptions$RowCache": {
        "rowsToCache": "int"
    },
    "org.apache.cassandra.cache.CachingOptions": {
        "rowCache": "org.apache.cassandra.cache.CachingOptions$RowCache",
        "ALL": "org.apache.cassandra.cache.CachingOptions",
        "ROWS_ONLY": "org.apache.cassandra.cache.CachingOptions",
        "NONE": "org.apache.cassandra.cache.CachingOptions",
        "KEYS_ONLY": "org.apache.cassandra.cache.CachingOptions"
    },
    "org.apache.cassandra.db.filter.ExtendedFilter": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "dataRange": "org.apache.cassandra.db.DataRange",
        "maxResults": "int",
        "currentLimit": "int"
    },
    "org.apache.cassandra.db.filter.ColumnCounter": {
        "live": "int"
    },
    "org.apache.cassandra.db.DataRange": {
        "keyRange": "org.apache.cassandra.dht.AbstractBounds",
        "columnFilter": "org.apache.cassandra.db.filter.IDiskAtomFilter"
    },
    "org.apache.cassandra.db.filter.ExtendedFilter$WithClauses": {
        "clause": "java.util.List",
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "dataRange": "org.apache.cassandra.db.DataRange",
        "optimizedFilter": "org.apache.cassandra.db.filter.IDiskAtomFilter"
    },
    "org.apache.cassandra.db.DataRange$Paging": {
        "columnFilter": "org.apache.cassandra.db.filter.IDiskAtomFilter",
        "firstPartitionColumnStart": "org.apache.cassandra.db.composites.Composite",
        "sliceFilter": "org.apache.cassandra.db.filter.SliceQueryFilter",
        "cfm": "org.apache.cassandra.config.CFMetaData",
        "lastPartitionColumnFinish": "org.apache.cassandra.db.composites.Composite"
    },
    "org.apache.cassandra.db.composites.AbstractCellNameType$CQL3RowOfSparse": {
        "collections": "java.util.Map"
    },
    "org.apache.cassandra.schema.LegacySchemaTables": {
        "ALL": "java.util.List",
        "Aggregates": "org.apache.cassandra.config.CFMetaData",
        "Columnfamilies": "org.apache.cassandra.config.CFMetaData",
        "Keyspaces": "org.apache.cassandra.config.CFMetaData",
        "Usertypes": "org.apache.cassandra.config.CFMetaData",
        "Columns": "org.apache.cassandra.config.CFMetaData",
        "Functions": "org.apache.cassandra.config.CFMetaData",
        "Triggers": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.config.TriggerDefinition": {
        "classOption": "java.lang.String",
        "name": "java.lang.String"
    },
    "org.apache.cassandra.config.CFMetaData$SpeculativeRetry": {
        "type": "org.apache.cassandra.config.CFMetaData$SpeculativeRetry$RetryType"
    },
    "org.apache.cassandra.db.marshal.CompositeType": {
        "types": "java.util.List",
        "instances": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.db.composites.AbstractSimpleCellNameType": {
        "type": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.composites.SimpleCType": {
        "type": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.db.composites.CompoundCType": {
        "types": "java.util.List"
    },
    "org.apache.cassandra.db.composites.AbstractCompoundCellNameType": {
        "clusteringSize": "int",
        "fullType": "org.apache.cassandra.db.composites.CompoundCType"
    },
    "org.apache.cassandra.db.marshal.TupleType": {
        "types": "java.util.List",
        "serializer": "org.apache.cassandra.serializers.TupleSerializer"
    },
    "org.apache.cassandra.db.marshal.UserType": {
        "types": "java.util.List",
        "fieldNames": "java.util.List",
        "name": "java.nio.ByteBuffer",
        "serializer": "org.apache.cassandra.serializers.UserTypeSerializer"
    },
    "org.apache.cassandra.db.SystemKeyspace": {
        "BuiltIndexes": "org.apache.cassandra.config.CFMetaData",
        "Batchlog": "org.apache.cassandra.config.CFMetaData",
        "SizeEstimates": "org.apache.cassandra.config.CFMetaData"
    },
    "org.apache.cassandra.config.UTMetaData": {
        "userTypes": "java.util.Map"
    },
    "org.apache.cassandra.db.marshal.MapType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "keys": "org.apache.cassandra.db.marshal.AbstractType",
        "values": "org.apache.cassandra.db.marshal.AbstractType",
        "serializer": "org.apache.cassandra.serializers.MapSerializer"
    },
    "org.apache.cassandra.db.marshal.SetType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "elements": "org.apache.cassandra.db.marshal.AbstractType",
        "serializer": "org.apache.cassandra.serializers.SetSerializer"
    },
    "org.apache.cassandra.db.marshal.ListType": {
        "frozenInstances": "java.util.Map",
        "instances": "java.util.Map",
        "elements": "org.apache.cassandra.db.marshal.AbstractType",
        "serializer": "org.apache.cassandra.serializers.ListSerializer"
    },
    "org.apache.cassandra.db.marshal.ColumnToCollectionType": {
        "instances": "java.util.Map",
        "defined": "java.util.Map"
    },
    "org.apache.cassandra.service.pager.MultiPartitionPager": {
        "pagers": "org.apache.cassandra.service.pager.SinglePartitionPager[]",
        "remaining": "int"
    },
    "org.apache.cassandra.service.pager.RangeSliceQueryPager": {
        "columnFilter": "org.apache.cassandra.db.filter.IDiskAtomFilter",
        "command": "org.apache.cassandra.db.RangeSliceCommand",
        "lastReturnedName": "org.apache.cassandra.db.composites.CellName"
    },
    "org.apache.cassandra.service.pager.RangeNamesQueryPager": {
        "command": "org.apache.cassandra.db.RangeSliceCommand"
    },
    "org.apache.cassandra.service.pager.SliceQueryPager": {
        "command": "org.apache.cassandra.db.SliceFromReadCommand"
    },
    "org.apache.cassandra.service.pager.AbstractQueryPager": {
        "remaining": "int"
    },
    "org.apache.cassandra.auth.CassandraRoleManager": {
        "LEGACY_ROW_TO_ROLE": "com.google.common.base.Function",
        "NULL_ROLE": "org.apache.cassandra.auth.CassandraRoleManager$Role",
        "ROW_TO_ROLE": "com.google.common.base.Function"
    },
    "org.apache.cassandra.db.composites.AbstractCType$Serializer": {
        "type": "org.apache.cassandra.db.composites.CType"
    },
    "org.apache.cassandra.db.composites.AbstractCType": {
        "deletionInfoSerializer": "org.apache.cassandra.db.DeletionInfo$Serializer",
        "sliceQueryFilterSerializer": "org.apache.cassandra.io.IVersionedSerializer",
        "serializer": "org.apache.cassandra.db.composites.AbstractCType$Serializer",
        "sliceSerializer": "org.apache.cassandra.io.IVersionedSerializer"
    },
    "org.apache.cassandra.io.sstable.IndexHelper$IndexInfo$Serializer": {
        "type": "org.apache.cassandra.db.composites.CType"
    },
    "org.apache.cassandra.db.composites.AbstractCellNameType": {
        "cellSerializer": "org.apache.cassandra.io.ISerializer",
        "namesQueryFilterSerializer": "org.apache.cassandra.io.IVersionedSerializer",
        "diskAtomFilterSerializer": "org.apache.cassandra.io.IVersionedSerializer",
        "columnSerializer": "org.apache.cassandra.db.ColumnSerializer"
    },
    "org.apache.cassandra.db.ColumnSerializer": {
        "type": "org.apache.cassandra.db.composites.CellNameType"
    },
    "org.apache.cassandra.service.ReadCallback$AsyncRepairRunner": {
        "traceState": "org.apache.cassandra.tracing.TraceState"
    },
    "org.apache.cassandra.db.RangeTombstoneList$Serializer": {
        "type": "org.apache.cassandra.db.composites.CType"
    },
    "org.apache.cassandra.db.DeletionInfo$Serializer": {
        "rtlSerializer": "org.apache.cassandra.db.RangeTombstoneList$Serializer"
    },
    "org.apache.cassandra.service.AsyncRepairCallback": {
        "repairResolver": "org.apache.cassandra.service.RowDataResolver"
    },
    "org.apache.cassandra.thrift.CassandraServer$ThriftCASRequest": {
        "expected": "org.apache.cassandra.db.ColumnFamily",
        "updates": "org.apache.cassandra.db.ColumnFamily"
    },
    "org.apache.cassandra.io.util.SegmentedFile": {
        "onDiskLength": "long",
        "length": "long"
    },
    "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator": {
        "owns": "long"
    },
    "org.apache.cassandra.utils.memory.MemtableAllocator": {
        "onHeap": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator",
        "offHeap": "org.apache.cassandra.utils.memory.MemtableAllocator$SubAllocator"
    },
    "org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "estimatedRemainingTasks": "int"
    },
    "org.apache.cassandra.db.compaction.WrappingCompactionStrategy": {
        "repaired": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy",
        "unrepaired": "org.apache.cassandra.db.compaction.AbstractCompactionStrategy"
    },
    "org.apache.cassandra.io.sstable.BloomFilterTracker": {
        "lastTruePositiveCount": "long",
        "lastFalsePositiveCount": "long"
    },
    "org.apache.cassandra.io.util.CompressedSegmentedFile": {
        "metadata": "org.apache.cassandra.io.compress.CompressionMetadata"
    },
    "org.apache.cassandra.io.util.CompressedPoolingSegmentedFile": {
        "metadata": "org.apache.cassandra.io.compress.CompressionMetadata"
    },
    "org.apache.cassandra.db.RowIndexEntry$Serializer": {
        "idxSerializer": "org.apache.cassandra.io.ISerializer"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableReader": {
        "ifile": "org.apache.cassandra.io.util.SegmentedFile",
        "rowIndexEntrySerializer": "org.apache.cassandra.db.RowIndexEntry$IndexSerializer"
    },
    "org.apache.cassandra.db.compaction.LeveledCompactionTask": {
        "maxSSTableBytes": "long"
    },
    "org.apache.cassandra.service.StorageProxy$LocalRangeSliceRunnable": {
        "handler": "org.apache.cassandra.service.ReadCallback",
        "command": "org.apache.cassandra.db.AbstractRangeCommand"
    },
    "org.apache.cassandra.service.StorageProxy$LocalReadRunnable": {
        "handler": "org.apache.cassandra.service.ReadCallback",
        "command": "org.apache.cassandra.db.ReadCommand"
    },
    "org.apache.cassandra.utils.ExpiringMap": {
        "cache": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.repair.LocalSyncTask": {
        "r2": "org.apache.cassandra.repair.TreeResponse",
        "state": "org.apache.cassandra.tracing.TraceState",
        "r1": "org.apache.cassandra.repair.TreeResponse"
    },
    "org.apache.cassandra.streaming.StreamResultFuture": {
        "eventListeners": "java.util.Collection",
        "coordinator": "org.apache.cassandra.streaming.StreamCoordinator"
    },
    "org.apache.cassandra.streaming.StreamSession": {
        "streamResult": "org.apache.cassandra.streaming.StreamResultFuture",
        "receivers": "java.util.Map",
        "transfers": "java.util.concurrent.ConcurrentHashMap"
    },
    "org.apache.cassandra.streaming.StreamReceiveTask": {
        "session": "org.apache.cassandra.streaming.StreamSession",
        "sstables": "java.util.Collection"
    },
    "org.apache.cassandra.streaming.StreamReceiveTask$OnCompletionRunnable": {
        "task": "org.apache.cassandra.streaming.StreamReceiveTask"
    },
    "org.apache.cassandra.utils.DefaultInteger": {
        "currentValue": "int"
    },
    "org.apache.cassandra.db.compaction.CompactionManager$BackgroundCompactionCandidate": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.streaming.StreamPlan": {
        "coordinator": "org.apache.cassandra.streaming.StreamCoordinator",
        "handlers": "java.util.List"
    },
    "org.apache.cassandra.streaming.ConnectionHandler$IncomingMessageHandler": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.streaming.StreamTransferTask": {
        "timeoutTasks": "java.util.Map",
        "session": "org.apache.cassandra.streaming.StreamSession",
        "files": "java.util.Map"
    },
    "org.apache.cassandra.streaming.compress.CompressedStreamReader": {
        "session": "org.apache.cassandra.streaming.StreamSession",
        "sections": "java.util.Collection"
    },
    "org.apache.cassandra.db.filter.IDiskAtomFilter$Serializer": {
        "type": "org.apache.cassandra.db.composites.CellNameType"
    },
    "org.apache.cassandra.db.filter.SliceQueryFilter$Serializer": {
        "type": "org.apache.cassandra.db.composites.CType"
    },
    "org.apache.cassandra.dht.LocalPartitioner$LocalToken": {
        "token": "java.lang.Comparable"
    },
    "org.apache.cassandra.dht.Range": {
        "left": "org.apache.cassandra.dht.RingPosition",
        "right": "org.apache.cassandra.dht.RingPosition"
    },
    "org.apache.cassandra.streaming.ConnectionHandler$OutgoingMessageHandler": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.streaming.compress.CompressedStreamWriter": {
        "compressionInfo": "org.apache.cassandra.streaming.compress.CompressionInfo",
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.streaming.StreamCoordinator$StreamSessionConnector": {
        "session": "org.apache.cassandra.streaming.StreamSession"
    },
    "org.apache.cassandra.db.marshal.BytesType": {
        "instance": "org.apache.cassandra.db.marshal.BytesType"
    },
    "org.apache.cassandra.db.HintedHandOffManager": {
        "hintStore": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.db.lifecycle.Tracker": {
        "subscribers": "java.util.Collection"
    },
    "org.apache.cassandra.locator.TokenMetadata": {
        "tokenToEndpointMap": "org.apache.cassandra.utils.BiMultiValMap",
        "topology": "org.apache.cassandra.locator.TokenMetadata$Topology",
        "pendingRanges": "java.util.concurrent.ConcurrentMap",
        "movingEndpoints": "java.util.Set",
        "bootstrapTokens": "org.apache.cassandra.utils.BiMultiValMap",
        "sortedTokens": "java.util.ArrayList",
        "leavingEndpoints": "java.util.Set"
    },
    "org.apache.cassandra.locator.NetworkTopologyStrategy": {
        "datacenters": "java.util.Map",
        "configOptions": "java.util.Map"
    },
    "org.apache.cassandra.cache.InstrumentingCache": {
        "map": "org.apache.cassandra.cache.ICache"
    },
    "org.apache.cassandra.service.CacheService": {
        "rowCache": "org.apache.cassandra.cache.AutoSavingCache",
        "instance": "org.apache.cassandra.service.CacheService",
        "keyCache": "org.apache.cassandra.cache.AutoSavingCache",
        "counterCache": "org.apache.cassandra.cache.AutoSavingCache"
    },
    "org.apache.cassandra.streaming.StreamCoordinator": {
        "peerSessions": "java.util.Map"
    },
    "org.apache.cassandra.streaming.StreamCoordinator$HostStreamingData": {
        "streamSessions": "java.util.Map"
    },
    "org.apache.cassandra.transport.messages.RegisterMessage": {
        "eventTypes": "java.util.List"
    },
    "org.apache.cassandra.transport.messages.SupportedMessage": {
        "supported": "java.util.Map"
    },
    "org.apache.cassandra.transport.messages.CredentialsMessage": {
        "credentials": "java.util.Map"
    },
    "org.apache.cassandra.transport.messages.StartupMessage": {
        "options": "java.util.Map"
    },
    "org.apache.cassandra.transport.messages.BatchMessage": {
        "values": "java.util.List",
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.transport.messages.ResultMessage$Prepared": {
        "resultMetadata": "org.apache.cassandra.cql3.ResultSet$ResultMetadata",
        "metadata": "org.apache.cassandra.cql3.ResultSet$PreparedMetadata"
    },
    "org.apache.cassandra.transport.messages.QueryMessage": {
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.transport.messages.ResultMessage$Rows": {
        "result": "org.apache.cassandra.cql3.ResultSet"
    },
    "org.apache.cassandra.transport.messages.ExecuteMessage": {
        "options": "org.apache.cassandra.cql3.QueryOptions"
    },
    "org.apache.cassandra.transport.Event$SchemaChange": {
        "argTypes": "java.util.List"
    },
    "org.apache.cassandra.transport.messages.EventMessage": {
        "event": "org.apache.cassandra.transport.Event"
    },
    "org.apache.cassandra.transport.messages.ResultMessage$SchemaChange": {
        "change": "org.apache.cassandra.transport.Event$SchemaChange"
    },
    "org.apache.cassandra.exceptions.FunctionExecutionException": {
        "argTypes": "java.util.List"
    },
    "org.apache.cassandra.transport.messages.ErrorMessage": {
        "error": "org.apache.cassandra.exceptions.TransportException"
    },
    "org.apache.cassandra.transport.Message": {
        "customPayload": "java.util.Map"
    },
    "org.apache.cassandra.transport.Message$Response": {
        "warnings": "java.util.List"
    },
    "org.apache.cassandra.transport.Frame": {
        "body": "io.netty.buffer.ByteBuf"
    },
    "org.apache.cassandra.db.compaction.LeveledManifest": {
        "generations": "java.util.List[]"
    },
    "org.apache.cassandra.db.compaction.LeveledCompactionStrategy": {
        "manifest": "org.apache.cassandra.db.compaction.LeveledManifest"
    },
    "org.apache.cassandra.notifications.SSTableRepairStatusChanged": {
        "sstable": "java.util.Collection"
    },
    "org.apache.cassandra.notifications.SSTableListChangedNotification": {
        "removed": "java.util.Collection",
        "added": "java.util.Collection"
    },
    "org.apache.cassandra.utils.progress.ProgressEventNotifierSupport": {
        "listeners": "java.util.List"
    },
    "org.apache.cassandra.locator.DynamicEndpointSnitch": {
        "scores": "java.util.HashMap",
        "subsnitch": "org.apache.cassandra.locator.IEndpointSnitch",
        "samples": "java.util.concurrent.ConcurrentHashMap"
    },
    "org.apache.cassandra.service.DatacenterSyncWriteResponseHandler": {
        "responses": "java.util.Map"
    },
    "org.apache.cassandra.utils.memory.SlabAllocator": {
        "offHeapRegions": "java.util.concurrent.ConcurrentLinkedQueue"
    },
    "org.apache.cassandra.utils.memory.NativeAllocator": {
        "regions": "java.util.concurrent.ConcurrentLinkedQueue"
    },
    "org.apache.cassandra.db.compaction.CompactionController": {
        "compacting": "java.lang.Iterable",
        "overlappingSSTables": "org.apache.cassandra.utils.concurrent.Refs"
    },
    "org.apache.cassandra.service.FileCacheService$CacheBucket": {
        "queue": "java.util.concurrent.ConcurrentLinkedQueue"
    },
    "org.apache.cassandra.metrics.ColumnFamilyMetrics": {
        "all": "java.util.Set",
        "rangeLatency": "org.apache.cassandra.metrics.LatencyMetrics",
        "allColumnFamilyMetrics": "java.util.concurrent.ConcurrentMap",
        "writeLatency": "org.apache.cassandra.metrics.LatencyMetrics",
        "readLatency": "org.apache.cassandra.metrics.LatencyMetrics"
    },
    "org.apache.cassandra.db.Directories": {
        "dataPaths": "java.io.File[]"
    },
    "org.apache.cassandra.service.ActiveRepairService$ParentRepairSession": {
        "columnFamilyStores": "java.util.Map"
    },
    "org.apache.cassandra.service.ActiveRepairService": {
        "instance": "org.apache.cassandra.service.ActiveRepairService",
        "parentRepairSessions": "java.util.concurrent.ConcurrentMap"
    },
    "org.apache.cassandra.repair.RepairSession": {
        "endpoints": "java.util.Set",
        "range": "org.apache.cassandra.dht.Range"
    },
    "org.apache.cassandra.auth.FunctionResource": {
        "argTypes": "java.util.List",
        "ROOT_RESOURCE": "org.apache.cassandra.auth.FunctionResource"
    },
    "org.apache.cassandra.auth.DataResource": {
        "ROOT_RESOURCE": "org.apache.cassandra.auth.DataResource"
    },
    "org.apache.cassandra.auth.RoleResource": {
        "ROOT_RESOURCE": "org.apache.cassandra.auth.RoleResource",
        "name": "java.lang.String"
    },
    "org.apache.cassandra.service.AbstractReadExecutor$NeverSpeculatingReadExecutor": {
        "targetReplicas": "java.util.List"
    },
    "org.apache.cassandra.service.AbstractReadExecutor$AlwaysSpeculatingReadExecutor": {
        "targetReplicas": "java.util.List"
    },
    "org.apache.cassandra.locator.TokenMetadata$Topology": {
        "dcRacks": "java.util.Map"
    },
    "org.apache.cassandra.auth.CassandraRoleManager$Role": {
        "canLogin": "boolean",
        "isSuper": "boolean",
        "memberOf": "java.util.Set"
    },
    "org.apache.cassandra.db.marshal.Int32Type": {
        "instance": "org.apache.cassandra.db.marshal.Int32Type"
    },
    "org.apache.cassandra.db.marshal.LongType": {
        "instance": "org.apache.cassandra.db.marshal.LongType"
    },
    "org.apache.cassandra.thrift.Column": {
        "name": "java.nio.ByteBuffer"
    },
    "org.apache.cassandra.utils.IntervalTree$IntervalNode": {
        "intersectsLeft": "java.util.List",
        "left": "org.apache.cassandra.utils.IntervalTree$IntervalNode",
        "intersectsRight": "java.util.List",
        "right": "org.apache.cassandra.utils.IntervalTree$IntervalNode"
    },
    "org.apache.cassandra.streaming.StreamState": {
        "sessions": "java.util.Set"
    },
    "org.apache.cassandra.locator.AbstractReplicationStrategy": {
        "keyspace": "org.apache.cassandra.db.Keyspace",
        "configOptions": "java.util.Map"
    },
    "org.apache.cassandra.repair.RepairRunnable": {
        "listeners": "java.util.List"
    },
    "org.apache.cassandra.db.commitlog.CommitLogSegmentManager": {
        "activeSegments": "java.util.concurrent.ConcurrentLinkedQueue",
        "availableSegments": "java.util.concurrent.ConcurrentLinkedQueue"
    },
    "org.apache.cassandra.db.commitlog.CommitLog": {
        "allocator": "org.apache.cassandra.db.commitlog.CommitLogSegmentManager",
        "instance": "org.apache.cassandra.db.commitlog.CommitLog"
    },
    "org.apache.cassandra.db.compaction.AbstractCompactionStrategy$ScannerList": {
        "scanners": "java.util.List"
    },
    "org.apache.cassandra.dht.Range$OrderedRangeContainmentChecker": {
        "normalizedRangesIterator": "java.util.Iterator"
    },
    "org.apache.cassandra.io.sstable.metadata.MetadataCollector": {
        "estimatedTombstoneDropTime": "org.apache.cassandra.utils.StreamingHistogram",
        "minColumnNames": "java.util.List",
        "maxColumnNames": "java.util.List"
    },
    "org.apache.cassandra.io.sstable.ColumnStats": {
        "minColumnNames": "java.util.List",
        "maxColumnNames": "java.util.List"
    },
    "org.apache.cassandra.db.compaction.LeveledManifest$CompactionCandidate": {
        "sstables": "java.util.Collection"
    },
    "org.apache.cassandra.metrics.RestorableMeter": {
        "NANOS_PER_SECOND": "double",
        "m15Rate": "org.apache.cassandra.metrics.RestorableMeter$RestorableEWMA",
        "m120Rate": "org.apache.cassandra.metrics.RestorableMeter$RestorableEWMA"
    },
    "org.apache.cassandra.metrics.RestorableMeter$RestorableEWMA": {
        "rate": "double"
    },
    "org.apache.cassandra.db.BatchlogManager$Batch$ReplayWriteResponseHandler": {
        "undelivered": "java.util.Set"
    },
    "org.apache.cassandra.db.BatchlogManager$Batch": {
        "id": "java.util.UUID",
        "replayHandlers": "java.util.List"
    },
    "org.apache.cassandra.streaming.compress.CompressedInputStream$Reader": {
        "chunks": "java.util.Iterator"
    },
    "org.apache.cassandra.db.compaction.writers.CompactionAwareWriter": {
        "sstableWriter": "org.apache.cassandra.io.sstable.SSTableRewriter"
    },
    "org.apache.cassandra.io.sstable.format.SSTableWriter$TransactionalProxy": {
        "finalReader": "org.apache.cassandra.io.sstable.format.SSTableReader"
    },
    "org.apache.cassandra.io.sstable.format.SSTableWriter": {
        "txnProxy": "org.apache.cassandra.io.sstable.format.SSTableWriter$TransactionalProxy"
    },
    "org.apache.cassandra.db.index.SecondaryIndex": {
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "columnDefs": "java.util.Set",
        "keyComparator": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.io.sstable.Downsampling": {
        "samplePatternCache": "java.util.Map"
    },
    "org.apache.cassandra.auth.RoleOptions": {
        "options": "java.util.Map"
    },
    "org.apache.cassandra.db.marshal.ReversedType": {
        "instances": "java.util.Map",
        "baseType": "org.apache.cassandra.db.marshal.AbstractType"
    },
    "org.apache.cassandra.service.MigrationManager": {
        "instance": "org.apache.cassandra.service.MigrationManager",
        "listeners": "java.util.List"
    },
    "org.apache.cassandra.db.ColumnFamilyStore$RefViewFragment": {
        "sstables": "java.util.List"
    },
    "org.apache.cassandra.metrics.KeyspaceMetrics": {
        "allMetrics": "java.util.Set"
    },
    "org.apache.cassandra.db.commitlog.CommitLogSegment": {
        "cfClean": "java.util.concurrent.ConcurrentHashMap"
    },
    "org.apache.cassandra.db.lifecycle.LifecycleTransaction$State": {
        "obsolete": "java.util.Set",
        "update": "java.util.Set"
    },
    "org.apache.cassandra.db.lifecycle.LifecycleTransaction": {
        "logged": "org.apache.cassandra.db.lifecycle.LifecycleTransaction$State",
        "tracker": "org.apache.cassandra.db.lifecycle.Tracker",
        "originals": "java.util.Set"
    },
    "org.apache.cassandra.db.compaction.LazilyCompactedRow": {
        "rows": "java.util.List"
    },
    "org.apache.cassandra.utils.MergeIterator": {
        "iterators": "java.util.List"
    },
    "org.apache.cassandra.io.sstable.ReducingKeyIterator": {
        "mi": "org.apache.cassandra.utils.IMergeIterator"
    },
    "org.apache.cassandra.io.util.CompressedSegmentedFile$Cleanup": {
        "chunkSegments": "java.util.TreeMap"
    },
    "org.apache.cassandra.io.util.CompressedPoolingSegmentedFile$Cleanup": {
        "chunkSegments": "java.util.TreeMap"
    },
    "org.apache.cassandra.db.compaction.CompactionTask": {
        "cfs": "org.apache.cassandra.db.ColumnFamilyStore",
        "transaction": "org.apache.cassandra.db.lifecycle.LifecycleTransaction"
    },
    "org.apache.cassandra.io.sstable.SSTable": {
        "components": "java.util.Set"
    },
    "org.apache.cassandra.db.composites.CompoundSparseCellNameType$WithCollection": {
        "collectionType": "org.apache.cassandra.db.marshal.ColumnToCollectionType",
        "clusteringType": "org.apache.cassandra.db.composites.CompoundCType"
    },
    "org.apache.cassandra.db.marshal.TimeUUIDType": {
        "instance": "org.apache.cassandra.db.marshal.TimeUUIDType"
    },
    "org.apache.cassandra.db.marshal.EmptyType": {
        "instance": "org.apache.cassandra.db.marshal.EmptyType"
    },
    "org.apache.cassandra.service.RangeSliceResponseResolver": {
        "responses": "java.util.Queue"
    },
    "org.apache.cassandra.db.AbstractRangeCommand": {
        "rowFilter": "java.util.List"
    },
    "org.apache.cassandra.utils.memory.HeapPool$Allocator$Reclaimer": {
        "delayed": "java.util.List"
    },
    "org.apache.cassandra.metrics.LatencyMetrics": {
        "parents": "java.util.List"
    },
    "org.apache.cassandra.service.StorageProxy": {
        "writeMetrics": "org.apache.cassandra.metrics.ClientRequestMetrics",
        "rangeMetrics": "org.apache.cassandra.metrics.ClientRequestMetrics",
        "casWriteMetrics": "org.apache.cassandra.metrics.CASClientRequestMetrics",
        "readMetrics": "org.apache.cassandra.metrics.ClientRequestMetrics",
        "casReadMetrics": "org.apache.cassandra.metrics.CASClientRequestMetrics"
    },
    "org.apache.cassandra.db.composites.AbstractCellNameType$SparseRowIterator": {
        "cells": "java.util.Iterator"
    },
    "org.apache.cassandra.serializers.UserTypeSerializer": {
        "fields": "java.util.LinkedHashMap"
    },
    "org.apache.cassandra.serializers.ByteSerializer": {
        "instance": "org.apache.cassandra.serializers.ByteSerializer"
    },
    "org.apache.cassandra.serializers.SimpleDateSerializer": {
        "instance": "org.apache.cassandra.serializers.SimpleDateSerializer"
    },
    "org.apache.cassandra.serializers.LongSerializer": {
        "instance": "org.apache.cassandra.serializers.LongSerializer"
    },
    "org.apache.cassandra.serializers.TimeSerializer": {
        "instance": "org.apache.cassandra.serializers.TimeSerializer"
    },
    "org.apache.cassandra.serializers.UTF8Serializer": {
        "instance": "org.apache.cassandra.serializers.UTF8Serializer"
    },
    "org.apache.cassandra.serializers.Int32Serializer": {
        "instance": "org.apache.cassandra.serializers.Int32Serializer"
    },
    "org.apache.cassandra.serializers.TimeUUIDSerializer": {
        "instance": "org.apache.cassandra.serializers.TimeUUIDSerializer"
    },
    "org.apache.cassandra.serializers.TimestampSerializer": {
        "instance": "org.apache.cassandra.serializers.TimestampSerializer"
    },
    "org.apache.cassandra.serializers.CounterSerializer": {
        "instance": "org.apache.cassandra.serializers.LongSerializer"
    },
    "org.apache.cassandra.serializers.IntegerSerializer": {
        "instance": "org.apache.cassandra.serializers.IntegerSerializer"
    },
    "org.apache.cassandra.serializers.DecimalSerializer": {
        "instance": "org.apache.cassandra.serializers.DecimalSerializer"
    },
    "org.apache.cassandra.serializers.EmptySerializer": {
        "instance": "org.apache.cassandra.serializers.EmptySerializer"
    },
    "org.apache.cassandra.serializers.BytesSerializer": {
        "instance": "org.apache.cassandra.serializers.BytesSerializer"
    },
    "org.apache.cassandra.serializers.DoubleSerializer": {
        "instance": "org.apache.cassandra.serializers.DoubleSerializer"
    },
    "org.apache.cassandra.serializers.ShortSerializer": {
        "instance": "org.apache.cassandra.serializers.ShortSerializer"
    },
    "org.apache.cassandra.serializers.UUIDSerializer": {
        "instance": "org.apache.cassandra.serializers.UUIDSerializer"
    },
    "org.apache.cassandra.serializers.FloatSerializer": {
        "instance": "org.apache.cassandra.serializers.FloatSerializer"
    },
    "org.apache.cassandra.serializers.AsciiSerializer": {
        "instance": "org.apache.cassandra.serializers.AsciiSerializer"
    },
    "org.apache.cassandra.serializers.InetAddressSerializer": {
        "instance": "org.apache.cassandra.serializers.InetAddressSerializer"
    },
    "org.apache.cassandra.serializers.SetSerializer": {
        "elements": "org.apache.cassandra.serializers.TypeSerializer"
    },
    "org.apache.cassandra.db.marshal.AsciiType": {
        "instance": "org.apache.cassandra.db.marshal.AsciiType"
    },
    "org.apache.cassandra.serializers.ListSerializer": {
        "elements": "org.apache.cassandra.serializers.TypeSerializer"
    },
    "org.apache.cassandra.db.marshal.UTF8Type": {
        "instance": "org.apache.cassandra.db.marshal.UTF8Type"
    },
    "org.apache.cassandra.db.marshal.TypeParser": {
        "cache": "java.util.Map"
    },
    "org.apache.cassandra.db.index.composites.CompositesSearcher": {
        "indexManager": "org.apache.cassandra.db.index.SecondaryIndexManager"
    },
    "org.apache.cassandra.db.marshal.CompositeType$StaticParsedComparator": {
        "part": "java.lang.String"
    },
    "org.apache.cassandra.service.StorageProxy$HintRunnable": {
        "target": "java.net.InetAddress"
    },
    "org.apache.cassandra.utils.ExpiringMap$CacheableObject": {
        "value": "java.lang.Object"
    },
    "org.apache.cassandra.notifications.SSTableAddedNotification": {
        "added": "org.apache.cassandra.io.sstable.format.SSTableReader"
    },
    "org.apache.cassandra.auth.PermissionDetails": {
        "resource": "org.apache.cassandra.auth.IResource",
        "grantee": "java.lang.String",
        "permission": "org.apache.cassandra.auth.Permission"
    },
    "org.apache.cassandra.metrics.HintedHandoffMetrics$DifferencingCounter": {
        "reported": "long"
    },
    "org.apache.cassandra.repair.TreeResponse": {
        "endpoint": "java.net.InetAddress"
    },
    "org.apache.cassandra.io.sstable.format.SSTableReader$GlobalTidy": {
        "readMeter": "org.apache.cassandra.metrics.RestorableMeter",
        "desc": "org.apache.cassandra.io.sstable.Descriptor"
    },
    "org.apache.cassandra.io.sstable.format.SSTableReader$InstanceTidier": {
        "global": "org.apache.cassandra.io.sstable.format.SSTableReader$GlobalTidy"
    },
    "org.apache.cassandra.serializers.MapSerializer": {
        "keys": "org.apache.cassandra.serializers.TypeSerializer",
        "values": "org.apache.cassandra.serializers.TypeSerializer"
    },
    "org.apache.cassandra.serializers.TupleSerializer": {
        "fields": "java.util.List"
    },
    "org.apache.cassandra.db.index.keys.KeysIndex": {
        "baseCfs": "org.apache.cassandra.db.ColumnFamilyStore"
    },
    "org.apache.cassandra.db.index.keys.KeysSearcher": {
        "indexManager": "org.apache.cassandra.db.index.SecondaryIndexManager"
    },
    "org.apache.cassandra.dht.Token$KeyBound": {
        "token": "org.apache.cassandra.dht.Token"
    },
    "org.apache.cassandra.io.sstable.format.SSTableReader$5$1": {
        "rangeIter": "java.util.Iterator"
    },
    "org.apache.cassandra.io.sstable.format.big.BigTableScanner": {
        "iterator": "java.util.Iterator"
    },
    "org.apache.cassandra.io.sstable.SSTableIdentityIterator": {
        "atomIterator": "java.util.Iterator"
    },
    "org.apache.cassandra.db.RowIteratorFactory$ConvertToColumnIterator": {
        "iter": "java.util.Iterator"
    },
    "org.apache.cassandra.io.sstable.format.big.SSTableSliceIterator": {
        "reader": "org.apache.cassandra.db.columniterator.OnDiskAtomIterator"
    },
    "org.apache.cassandra.service.MigrationTask": {
        "endpoint": "java.net.InetAddress"
    },
    "org.apache.cassandra.repair.SnapshotTask": {
        "endpoint": "java.net.InetAddress"
    },
    "org.apache.cassandra.repair.ValidationTask": {
        "endpoint": "java.net.InetAddress"
    },
    "org.apache.cassandra.transport.Message$Dispatcher$Flusher": {
        "channels": "java.util.HashSet",
        "flushed": "java.util.List"
    },
    "org.apache.cassandra.transport.Message$Dispatcher$FlushItem": {
        "response": "java.lang.Object"
    },
    "org.apache.cassandra.repair.StreamingRepairTask": {
        "request": "org.apache.cassandra.repair.messages.SyncRequest"
    },
    "org.apache.cassandra.repair.AnticompactionTask": {
        "neighbor": "java.net.InetAddress"
    },
    "org.apache.cassandra.io.sstable.SSTableRewriter$InvalidateKeys": {
        "cacheKeys": "java.util.List"
    },
    "org.apache.cassandra.repair.Validator": {
        "initiator": "java.net.InetAddress"
    },
    "org.apache.cassandra.config.ParameterizedClass": {
        "parameters": "java.util.Map"
    },
    "org.apache.cassandra.db.commitlog.CommitLogDescriptor": {
        "compression": "org.apache.cassandra.config.ParameterizedClass"
    },
    "org.apache.cassandra.db.ColumnFamilyType": {
        "Standard": "org.apache.cassandra.db.ColumnFamilyType"
    },
    "org.apache.cassandra.io.sstable.Component": {
        "TOC": "org.apache.cassandra.io.sstable.Component"
    },
    "org.apache.cassandra.config.Config": {
        "cluster_name": "java.lang.String"
    },
    "org.apache.cassandra.service.StartupChecks": {
        "preFlightChecks": "java.util.List"
    },
    "org.apache.cassandra.service.CassandraDaemon": {
        "startupChecks": "org.apache.cassandra.service.StartupChecks",
        "instance": "org.apache.cassandra.service.CassandraDaemon"
    },
    "org.apache.cassandra.db.compaction.AbstractCompactionIterable": {
        "scanners": "java.util.List"
    }
}
